



GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab


















Projects
Groups
Snippets



GitLab






GitLab









Projects
Groups
Snippets






Projects
Groups
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Joshua Garcia heros
Commits

3d7cf977















Commit
3d7cf977


authored
Apr 02, 2014
by


Steven Arzt



Browse files




generalized ICFG types







parent
c61a8806













Changes
2




Hide whitespace changes

Inline
Side-by-side















src/heros/InterproceduralCFG.java








View file @ 3d7cf977






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......














src/heros/solver/IDESolver.java








View file @ 3d7cf977






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......
















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Joshua Garcia heros
Commits

3d7cf977















Commit
3d7cf977


authored
Apr 02, 2014
by


Steven Arzt



Browse files




generalized ICFG types







parent
c61a8806













Changes
2




Hide whitespace changes

Inline
Side-by-side















src/heros/InterproceduralCFG.java








View file @ 3d7cf977






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......














src/heros/solver/IDESolver.java








View file @ 3d7cf977






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......
















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Open sidebar



Joshua Garcia heros
Commits

3d7cf977







Open sidebar



Joshua Garcia heros
Commits

3d7cf977




Open sidebar

Joshua Garcia heros
Commits

3d7cf977


Joshua GarciaherosherosCommits
3d7cf977








Commit
3d7cf977


authored
Apr 02, 2014
by


Steven Arzt



Browse files




generalized ICFG types







parent
c61a8806













Changes
2




Hide whitespace changes

Inline
Side-by-side















src/heros/InterproceduralCFG.java








View file @ 3d7cf977






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......














src/heros/solver/IDESolver.java








View file @ 3d7cf977






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......
















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










Commit
3d7cf977


authored
Apr 02, 2014
by


Steven Arzt



Browse files




generalized ICFG types







parent
c61a8806













Changes
2




Hide whitespace changes

Inline
Side-by-side















src/heros/InterproceduralCFG.java








View file @ 3d7cf977






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......














src/heros/solver/IDESolver.java








View file @ 3d7cf977






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......
















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment






Commit
3d7cf977


authored
Apr 02, 2014
by


Steven Arzt



Browse files



Commit
3d7cf977


authored
Apr 02, 2014
by


Steven Arzt

3d7cf977authoredbySteven Arzt

generalized ICFG types






parent
c61a8806
















parent
c61a8806





parent












Changes
2
2


Hide whitespace changes

Inline
Side-by-side






Hide whitespace changes

Inline
Side-by-side




Hide whitespace changes

Inline
Side-by-side


Inline
Side-by-side










src/heros/InterproceduralCFG.java








View file @ 3d7cf977






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......














src/heros/solver/IDESolver.java








View file @ 3d7cf977






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......














src/heros/InterproceduralCFG.java








View file @ 3d7cf977






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......












src/heros/InterproceduralCFG.java








View file @ 3d7cf977








src/heros/InterproceduralCFG.java










View file @ 3d7cf977


3d7cf977



......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......






......@@ -36,12 +36,12 @@ public interface InterproceduralCFG<N,M>  {









 /**










	 * Returns all callee methods for a given call.










	 */










 public Set<M> getCalleesOfCallAt(N n);










 public Collection<M> getCalleesOfCallAt(N n);





















 /**










	 * Returns all caller statements/nodes of a given method.










	 */










 public Set<N> getCallersOf(M m);










 public Collection<N> getCallersOf(M m);





















 /**










	 * Returns all call sites within a given method.



......


 /**/**	 * Returns all callee methods for a given call.	 * Returns all callee methods for a given call.	 */	 */ public Set<M> getCalleesOfCallAt(N n);publicSetSet<M>getCalleesOfCallAt(Nn); public Collection<M> getCalleesOfCallAt(N n);publicCollectionCollection<M>getCalleesOfCallAt(Nn); /**/**	 * Returns all caller statements/nodes of a given method.	 * Returns all caller statements/nodes of a given method.	 */	 */ public Set<N> getCallersOf(M m);publicSetSet<N>getCallersOf(Mm); public Collection<N> getCallersOf(M m);publicCollectionCollection<N>getCallersOf(Mm); /**/**	 * Returns all call sites within a given method.	 * Returns all call sites within a given method.








src/heros/solver/IDESolver.java








View file @ 3d7cf977






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......












src/heros/solver/IDESolver.java








View file @ 3d7cf977








src/heros/solver/IDESolver.java










View file @ 3d7cf977


3d7cf977



......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......






......@@ -312,7 +312,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);










 










 //for each possible callee










 Set<M> callees = icfg.getCalleesOfCallAt(n);










 Collection<M> callees = icfg.getCalleesOfCallAt(n);










 for(M sCalledProcN: callees) { //still line 14










 










 //compute the call-flow function



......@@ -475,7 +475,7 @@ public class IDESolver<N,D,M,V,I extends InterproceduralCFG<N, M>> {









 //be propagated into callers that have an incoming edge for this condition










 if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {










 // only propagate up if we 










 Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);










 for(N c: callers) {










 for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {










 FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);



......


 Collection<N> returnSiteNs = icfg.getReturnSitesOfCallAt(n);Collection<N>returnSiteNs=icfg.getReturnSitesOfCallAt(n);  //for each possible callee//for each possible callee Set<M> callees = icfg.getCalleesOfCallAt(n);SetSet<M>callees=icfg.getCalleesOfCallAt(n); Collection<M> callees = icfg.getCalleesOfCallAt(n);CollectionCollection<M>callees=icfg.getCalleesOfCallAt(n); for(M sCalledProcN: callees) { //still line 14for(MsCalledProcN:callees){//still line 14  //compute the call-flow function//compute the call-flow function //be propagated into callers that have an incoming edge for this condition//be propagated into callers that have an incoming edge for this condition if(followReturnsPastSeeds && inc.isEmpty() && d1.equals(zeroValue)) {if(followReturnsPastSeeds&&inc.isEmpty()&&d1.equals(zeroValue)){ // only propagate up if we // only propagate up if we  Set<N> callers = icfg.getCallersOf(methodThatNeedsSummary);SetSet<N>callers=icfg.getCallersOf(methodThatNeedsSummary); Collection<N> callers = icfg.getCallersOf(methodThatNeedsSummary);CollectionCollection<N>callers=icfg.getCallersOf(methodThatNeedsSummary); for(N c: callers) {for(Nc:callers){ for(N retSiteC: icfg.getReturnSitesOfCallAt(c)) {for(NretSiteC:icfg.getReturnSitesOfCallAt(c)){ FlowFunction<D> retFunction = flowFunctions.getReturnFlowFunction(c, methodThatNeedsSummary,n,retSiteC);FlowFunction<D>retFunction=flowFunctions.getReturnFlowFunction(c,methodThatNeedsSummary,n,retSiteC);









Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel







Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Write




Preview

























Write



Preview

















































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel












Supports Markdown






0%










Try again


or


attach a new file


.



Cancel




Supports Markdown





0%










Try again


or


attach a new file


.



Cancel






0%


0%







Try again


or


attach a new file


.




Try again

attach a new file

Cancel



You are about to add

0
people

to the discussion. Proceed with caution.



You are about to add

0
people

to the discussion. Proceed with caution.
0

Finish editing this message first!



Cancel



Finish editing this message first!

Cancel


Please register or sign in to comment






