



GitLab












Menu




Projects
Groups
Snippets


















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab












Menu




Projects
Groups
Snippets


















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab












Menu




Projects
Groups
Snippets



GitLab






GitLab




Menu




Projects
Groups
Snippets




Menu


Projects
Groups
Snippets















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in
















/














/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help



Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab




Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


haskell






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Yu Liu haskell
Commits

a1c71aea















Commit
a1c71aea


authored
Feb 26, 2015
by


darlliu



Browse files




update







parent
c8207c2f













Changes
25




Hide whitespace changes

Inline
Side-by-side















.gitignore








View file @ a1c71aea






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*














cybert/Cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hs



0 → 100644







View file @ a1c71aea













-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()

























cybert/Imputer.o



0 → 100644




View file @ a1c71aea





File added













cybert/barcode.hs



0 → 100644







View file @ a1c71aea













import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P

























cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea





File added













cybert/cd271ex.o



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0














ml/test_cybert.hs



0 → 100644







View file @ a1c71aea













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"














stm/parallel.eventlog



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hi



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hs



0 → 100644







View file @ a1c71aea













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)














stm/parallel.o



0 → 100644




View file @ a1c71aea





File added













stm/stm.hs



0 → 100644







View file @ a1c71aea













--a stm based tranformer/sorter









Prev


1


2


Next















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










H


haskell






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


haskell


H
H
haskell




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Yu Liu haskell
Commits

a1c71aea















Commit
a1c71aea


authored
Feb 26, 2015
by


darlliu



Browse files




update







parent
c8207c2f













Changes
25




Hide whitespace changes

Inline
Side-by-side















.gitignore








View file @ a1c71aea






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*














cybert/Cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hs



0 → 100644







View file @ a1c71aea













-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()

























cybert/Imputer.o



0 → 100644




View file @ a1c71aea





File added













cybert/barcode.hs



0 → 100644







View file @ a1c71aea













import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P

























cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea





File added













cybert/cd271ex.o



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0














ml/test_cybert.hs



0 → 100644







View file @ a1c71aea













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"














stm/parallel.eventlog



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hi



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hs



0 → 100644







View file @ a1c71aea













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)














stm/parallel.o



0 → 100644




View file @ a1c71aea





File added













stm/stm.hs



0 → 100644







View file @ a1c71aea













--a stm based tranformer/sorter









Prev


1


2


Next















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Open sidebar



Yu Liu haskell
Commits

a1c71aea







Open sidebar



Yu Liu haskell
Commits

a1c71aea




Open sidebar

Yu Liu haskell
Commits

a1c71aea


Yu LiuhaskellhaskellCommits
a1c71aea








Commit
a1c71aea


authored
Feb 26, 2015
by


darlliu



Browse files




update







parent
c8207c2f













Changes
25




Hide whitespace changes

Inline
Side-by-side















.gitignore








View file @ a1c71aea






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*














cybert/Cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hs



0 → 100644







View file @ a1c71aea













-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()

























cybert/Imputer.o



0 → 100644




View file @ a1c71aea





File added













cybert/barcode.hs



0 → 100644







View file @ a1c71aea













import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P

























cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea





File added













cybert/cd271ex.o



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0














ml/test_cybert.hs



0 → 100644







View file @ a1c71aea













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"














stm/parallel.eventlog



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hi



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hs



0 → 100644







View file @ a1c71aea













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)














stm/parallel.o



0 → 100644




View file @ a1c71aea





File added













stm/stm.hs



0 → 100644







View file @ a1c71aea













--a stm based tranformer/sorter









Prev


1


2


Next















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










Commit
a1c71aea


authored
Feb 26, 2015
by


darlliu



Browse files




update







parent
c8207c2f













Changes
25




Hide whitespace changes

Inline
Side-by-side















.gitignore








View file @ a1c71aea






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*














cybert/Cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hs



0 → 100644







View file @ a1c71aea













-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()

























cybert/Imputer.o



0 → 100644




View file @ a1c71aea





File added













cybert/barcode.hs



0 → 100644







View file @ a1c71aea













import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P

























cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea





File added













cybert/cd271ex.o



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0














ml/test_cybert.hs



0 → 100644







View file @ a1c71aea













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"














stm/parallel.eventlog



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hi



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hs



0 → 100644







View file @ a1c71aea













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)














stm/parallel.o



0 → 100644




View file @ a1c71aea





File added













stm/stm.hs



0 → 100644







View file @ a1c71aea













--a stm based tranformer/sorter









Prev


1


2


Next















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment






Commit
a1c71aea


authored
Feb 26, 2015
by


darlliu



Browse files



Commit
a1c71aea


authored
Feb 26, 2015
by


darlliu

a1c71aeaauthoredbydarlliu

update






parent
c8207c2f
















parent
c8207c2f





parent












Changes
25
25


Hide whitespace changes

Inline
Side-by-side






Hide whitespace changes

Inline
Side-by-side




Hide whitespace changes

Inline
Side-by-side


Inline
Side-by-side










.gitignore








View file @ a1c71aea






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*














cybert/Cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hi



0 → 100644




View file @ a1c71aea





File added













cybert/Imputer.hs



0 → 100644







View file @ a1c71aea













-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()

























cybert/Imputer.o



0 → 100644




View file @ a1c71aea





File added













cybert/barcode.hs



0 → 100644







View file @ a1c71aea













import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P

























cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea





File added













cybert/cd271ex.o



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea





File added













cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.o



0 → 100644




View file @ a1c71aea





File added













cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0














ml/test_cybert.hs



0 → 100644







View file @ a1c71aea













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"














stm/parallel.eventlog



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hi



0 → 100644




View file @ a1c71aea





File added













stm/parallel.hs



0 → 100644







View file @ a1c71aea













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)














stm/parallel.o



0 → 100644




View file @ a1c71aea





File added













stm/stm.hs



0 → 100644







View file @ a1c71aea













--a stm based tranformer/sorter









Prev


1


2


Next













.gitignore








View file @ a1c71aea






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*












.gitignore








View file @ a1c71aea








.gitignore










View file @ a1c71aea


a1c71aea



......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*






......@@ -8,5 +8,4 @@ cabal-dev









*.txt










test_*










.virthualenv










*/*










!*.*









final/*


*.txttest_*.virthualenv*/*!*.*final/*








cybert/Cybert.hi



0 → 100644




View file @ a1c71aea





File added











cybert/Cybert.hi



0 → 100644




View file @ a1c71aea








cybert/Cybert.hi



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/Cybert.o



0 → 100644




View file @ a1c71aea





File added











cybert/Cybert.o



0 → 100644




View file @ a1c71aea








cybert/Cybert.o



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/Imputer.hi



0 → 100644




View file @ a1c71aea





File added











cybert/Imputer.hi



0 → 100644




View file @ a1c71aea








cybert/Imputer.hi



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/Imputer.hs



0 → 100644







View file @ a1c71aea













-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()























cybert/Imputer.hs



0 → 100644







View file @ a1c71aea








cybert/Imputer.hs



0 → 100644









View file @ a1c71aea


a1c71aea










-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()
























-- A program to find out outlier values










-- in a tsv file of Cyber-T input type and then 










-- either impute or delete the outliers










import Data.CSV.Conduit










import Data.Text (Text, unpack)










import qualified Data.Vector as V










import Control.Monad










import Control.Exception










import Data.List





















-- First, load the tsv as special csv










-- Then, obtain dataframe and 










--










main :: IO ()










main = do










 let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}










 csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))










 V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvData










 return ()













-- A program to find out outlier values-- A program to find out outlier values-- in a tsv file of Cyber-T input type and then -- in a tsv file of Cyber-T input type and then -- either impute or delete the outliers-- either impute or delete the outliersimport Data.CSV.ConduitimportData.CSV.Conduitimport Data.Text (Text, unpack)importData.Text(Text,unpack)import qualified Data.Vector as VimportqualifiedData.VectorasVimport Control.MonadimportControl.Monadimport Control.ExceptionimportControl.Exceptionimport Data.ListimportData.List-- First, load the tsv as special csv-- First, load the tsv as special csv-- Then, obtain dataframe and -- Then, obtain dataframe and ----main :: IO ()main::IO()main = domain=do let myOption = CSVSettings{csvSep='\t', csvQuoteChar=Nothing}letmyOption=CSVSettings{csvSep='\t',csvQuoteChar=Nothing} csvData <- readCSVFile myOption "./txts/test_csv.txt" :: IO (V.Vector (Row Text))csvData<-readCSVFilemyOption"./txts/test_csv.txt"::IO(V.Vector(RowText)) V.mapM (\x-> putStrLn $ intercalate "," $ map unpack x) csvDataV.mapM(\x->putStrLn$intercalate","$mapunpackx)csvData return ()return()








cybert/Imputer.o



0 → 100644




View file @ a1c71aea





File added











cybert/Imputer.o



0 → 100644




View file @ a1c71aea








cybert/Imputer.o



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/barcode.hs



0 → 100644







View file @ a1c71aea













import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P























cybert/barcode.hs



0 → 100644







View file @ a1c71aea








cybert/barcode.hs



0 → 100644









View file @ a1c71aea


a1c71aea










import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P
























import Cybert










import Data.Maybe










import Data.List










import qualified Data.Map as M










import Control.Monad










import qualified Control.Exception as E










import System.Directory










import System.IO










import qualified Control.Monad.Parallel as P













import CybertimportCybertimport Data.MaybeimportData.Maybeimport Data.ListimportData.Listimport qualified Data.Map as MimportqualifiedData.MapasMimport Control.MonadimportControl.Monadimport qualified Control.Exception as EimportqualifiedControl.ExceptionasEimport System.DirectoryimportSystem.Directoryimport System.IOimportSystem.IOimport qualified Control.Monad.Parallel as PimportqualifiedControl.Monad.ParallelasP








cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea





File added











cybert/cd271ex.hi



0 → 100644




View file @ a1c71aea








cybert/cd271ex.hi



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/cd271ex.o



0 → 100644




View file @ a1c71aea





File added











cybert/cd271ex.o



0 → 100644




View file @ a1c71aea








cybert/cd271ex.o



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea





File added











cybert/huanganalysis.hi



0 → 100644




View file @ a1c71aea








cybert/huanganalysis.hi



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea





File added











cybert/huanganalysis.o



0 → 100644




View file @ a1c71aea








cybert/huanganalysis.o



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea





File added











cybert/test_cybert.hi



0 → 100644




View file @ a1c71aea








cybert/test_cybert.hi



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/test_cybert.o



0 → 100644




View file @ a1c71aea





File added











cybert/test_cybert.o



0 → 100644




View file @ a1c71aea








cybert/test_cybert.o



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0












cybert/test_cybert.prof



0 → 100644







View file @ a1c71aea








cybert/test_cybert.prof



0 → 100644









View file @ a1c71aea


a1c71aea










	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0













	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)





















	   test_cybert +RTS -p -RTS





















	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)










	total alloc = 298,661,336 bytes  (excludes profiling overheads)





















COST CENTRE                MODULE  %time %alloc





















lineToCybert.readLine.ss   Cybert   30.2   69.1










getText                    Cybert   15.6    4.5










getText.idx                Cybert   13.6    0.2










loadCybert.\.output        Cybert    8.8    2.6










lineToCybert.readLine      Cybert    7.5    1.3










lineToCybert.readLine.cybt Cybert    5.1   12.2










exportGeneSyms.\.contents  Cybert    4.7    6.6










maybeGet                   Cybert    4.7    0.5










loadCybert.\               Cybert    3.7    0.0










loadCybert.\.mylines       Cybert    3.7    2.7










exportGeneSyms.\           Cybert    1.4    0.0
































                                                                               individual     inherited










COST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %alloc





















MAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0










 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0










  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0










 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0










  main                               Main                    106           1    0.0    0.0    99.7  100.0










   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7










    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7










     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6










      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3










    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3










     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0










      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0










       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0










       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0










       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0










        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0










         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0










          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0










         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0










     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5










      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9










       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9










        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4










         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3










          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2










          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5










        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1










     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7










 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0










 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0










  main                               Main                    132           0    0.0    0.0     0.0    0.0










   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0


	Sat May 25 15:23 2013 Time and Allocation Profiling Report  (Final)	   test_cybert +RTS -p -RTS	total time  =        0.29 secs   (295 ticks @ 1000 us, 1 processor)	total alloc = 298,661,336 bytes  (excludes profiling overheads)COST CENTRE                MODULE  %time %alloclineToCybert.readLine.ss   Cybert   30.2   69.1getText                    Cybert   15.6    4.5getText.idx                Cybert   13.6    0.2loadCybert.\.output        Cybert    8.8    2.6lineToCybert.readLine      Cybert    7.5    1.3lineToCybert.readLine.cybt Cybert    5.1   12.2exportGeneSyms.\.contents  Cybert    4.7    6.6maybeGet                   Cybert    4.7    0.5loadCybert.\               Cybert    3.7    0.0loadCybert.\.mylines       Cybert    3.7    2.7exportGeneSyms.\           Cybert    1.4    0.0                                                                               individual     inheritedCOST CENTRE                          MODULE                  no.     entries  %time %alloc   %time %allocMAIN                                 MAIN                     53           0    0.0    0.0   100.0  100.0 CAF                                 Cybert                  105           0    0.0    0.0     0.0    0.0  cybert_entry                       Cybert                  123           1    0.0    0.0     0.0    0.0 CAF                                 Main                    104           0    0.3    0.0   100.0  100.0  main                               Main                    106           1    0.0    0.0    99.7  100.0   exportGeneSyms                    Cybert                  124           1    0.7    0.0     6.8    6.7    exportGeneSyms.\                 Cybert                  125           1    1.4    0.0     6.1    6.7     exportGeneSyms.\.contents       Cybert                  126           1    4.7    6.6     4.7    6.6      showJustS                      Cybert                  127       37852    0.0    0.0     0.0    0.0   loadCybert                        Cybert                  107           1    0.0    0.0    92.9   93.3    loadCybert.\                     Cybert                  108           1    3.7    0.0    92.9   93.3     loadCybert.\.header             Cybert                  114           1    0.0    0.0     0.0    0.0      buildHeader                    Cybert                  115           1    0.0    0.0     0.0    0.0       buildHeader.sl                Cybert                  131           1    0.0    0.0     0.0    0.0       buildHeader.\                 Cybert                  119          31    0.0    0.0     0.0    0.0       buildHeader.ss                Cybert                  116           1    0.0    0.0     0.0    0.0        buildHeaderPrec              Cybert                  117           1    0.0    0.0     0.0    0.0         buildHeaderPrec.\           Cybert                  120          31    0.0    0.0     0.0    0.0          buildHeaderPrec.stripQuote Cybert                  121          31    0.0    0.0     0.0    0.0         buildHeaderPrec.ss          Cybert                  118           1    0.0    0.0     0.0    0.0     loadCybert.\.output             Cybert                  110           1    8.8    2.6    85.4   90.5      lineToCybert                   Cybert                  111       37853    0.0    0.0    76.6   87.9       lineToCybert.readLine         Cybert                  112       37853    7.5    1.3    76.6   87.9        lineToCybert.readLine.cybt   Cybert                  122       37852    5.1   12.2    39.0   17.4         getText                     Cybert                  128       37852   15.6    4.5    33.9    5.3          getText.idx                Cybert                  130       37852   13.6    0.2    13.6    0.2          maybeGet                   Cybert                  129       37852    4.7    0.5     4.7    0.5        lineToCybert.readLine.ss     Cybert                  113       37853   30.2   69.1    30.2   69.1     loadCybert.\.mylines            Cybert                  109           1    3.7    2.7     3.7    2.7 CAF                                 GHC.Conc.Signal          99           0    0.0    0.0     0.0    0.0 CAF                                 GHC.IO.Encoding          96           0    0.0    0.0     0.0    0.0 CAF                                 GHC.IO.Handle.FD         94           0    0.0    0.0     0.0    0.0 CAF                                 GHC.IO.Encoding.Iconv    80           0    0.0    0.0     0.0    0.0 CAF                                 GHC.IO.FD                79           0    0.0    0.0     0.0    0.0  main                               Main                    132           0    0.0    0.0     0.0    0.0   loadCybert                        Cybert                  133           0    0.0    0.0     0.0    0.0








ml/test_cybert.hs



0 → 100644







View file @ a1c71aea













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"












ml/test_cybert.hs



0 → 100644







View file @ a1c71aea








ml/test_cybert.hs



0 → 100644









View file @ a1c71aea


a1c71aea










import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"













import Cybert





















main = do










 {-










     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}










     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}










     -}










 ssome@(Just some)<- loadCybert "test.txt"










 exportGeneSyms some "tested.txt"


import CybertimportCybertmain = domain=do {-{-     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}     -let c = cybert_entry{genesym=(Just "Sym"), mean = (Right [1,2,3])}     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}     -let d = cybert_entry{genesym=(Just "Sym2"), mean = (Right [1,2,3])}     -}     -} ssome@(Just some)<- loadCybert "test.txt"ssome@(Justsome)<-loadCybert"test.txt" exportGeneSyms some "tested.txt"exportGeneSymssome"tested.txt"








stm/parallel.eventlog



0 → 100644




View file @ a1c71aea





File added











stm/parallel.eventlog



0 → 100644




View file @ a1c71aea








stm/parallel.eventlog



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









stm/parallel.hi



0 → 100644




View file @ a1c71aea





File added











stm/parallel.hi



0 → 100644




View file @ a1c71aea








stm/parallel.hi



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









stm/parallel.hs



0 → 100644







View file @ a1c71aea













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)












stm/parallel.hs



0 → 100644







View file @ a1c71aea








stm/parallel.hs



0 → 100644









View file @ a1c71aea


a1c71aea










--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)













--a strategy based parallel/concurrent filter and sorter










import Control.Monad










import Data.List










import Control.Parallel.Strategies










{-module Main() where-}





















f:: Int -> Float










f x = if x > 1 then 1/(fromIntegral x)*(f (x-1))










 else 1










main = do










 let arr = take 40000 [1..]










 let arr' = parMap rseq f arr










 let sum = foldl1' (+) arr'










 putStrLn $ "The sum of reciporal is "++ (show sum)


--a strategy based parallel/concurrent filter and sorter--a strategy based parallel/concurrent filter and sorterimport Control.MonadimportControl.Monadimport Data.ListimportData.Listimport Control.Parallel.StrategiesimportControl.Parallel.Strategies{-module Main() where-}{-module Main() where-}f:: Int -> Floatf::Int->Floatf x = if x > 1 then 1/(fromIntegral x)*(f (x-1))fx=ifx>1then1/(fromIntegralx)*(f(x-1)) else 1else1main = domain=do let arr = take 40000 [1..]letarr=take40000[1..] let arr' = parMap rseq f arrletarr'=parMaprseqfarr let sum = foldl1' (+) arr'letsum=foldl1'(+)arr' putStrLn $ "The sum of reciporal is "++ (show sum)putStrLn$"The sum of reciporal is "++(showsum)








stm/parallel.o



0 → 100644




View file @ a1c71aea





File added











stm/parallel.o



0 → 100644




View file @ a1c71aea








stm/parallel.o



0 → 100644






View file @ a1c71aea
a1c71aea


File added




File added


File added









stm/stm.hs



0 → 100644







View file @ a1c71aea













--a stm based tranformer/sorter












stm/stm.hs



0 → 100644







View file @ a1c71aea








stm/stm.hs



0 → 100644









View file @ a1c71aea


a1c71aea










--a stm based tranformer/sorter













--a stm based tranformer/sorter


--a stm based tranformer/sorter--a stm based tranformer/sorter



Prev


1


2


Next





Prev

1

2

Next











Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel







Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Write




Preview






















Write



Preview











































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel












Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel




Supports Markdown





0%










Try again


or


attach a new file


.




Attach a file




Cancel






0%


0%







Try again


or


attach a new file


.




Try again

attach a new file

Attach a file

Cancel



You are about to add

0
people

to the discussion. Proceed with caution.



You are about to add

0
people

to the discussion. Proceed with caution.
0

Finish editing this message first!



Cancel



Finish editing this message first!

Cancel


Please register or sign in to comment






