



GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab






Sign in




Toggle navigation

Menu








GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab






Sign in




Toggle navigation

Menu






GitLab


















Projects
Groups
Snippets



GitLab






GitLab









Projects
Groups
Snippets






Projects
Groups
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab






Sign in




Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Joshua Garcia heros

Commits



















heros
















08 Feb, 2017
1 commit









changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6










14 Nov, 2016
2 commits









updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe













updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4










18 Aug, 2016
1 commit









updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9










03 Aug, 2016
2 commits









modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b













re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424










02 Aug, 2016
1 commit









converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9










27 Jun, 2016
2 commits









Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db













Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e










25 Jun, 2016
3 commits









Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6













Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa













Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775










03 Jun, 2016
1 commit









including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea










16 Jan, 2016
2 commits









Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da













fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e










15 Jan, 2016
1 commit









Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1










14 Dec, 2015
3 commits









Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570













Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415













Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8










09 Oct, 2015
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07













updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba










20 Aug, 2015
1 commit









added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844










10 Aug, 2015
2 commits









removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a













extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab










17 Jul, 2015
1 commit









changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d










16 Jul, 2015
3 commits









removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc













fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059













removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd










15 Jul, 2015
1 commit









Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece










10 Jul, 2015
6 commits









Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d













Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56













Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379













Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70













JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a













correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108










09 Jul, 2015
4 commits









fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03













switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44













adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4













skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e










08 Jul, 2015
1 commit









Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678



















H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Joshua Garcia heros

Commits



















heros
















08 Feb, 2017
1 commit









changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6










14 Nov, 2016
2 commits









updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe













updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4










18 Aug, 2016
1 commit









updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9










03 Aug, 2016
2 commits









modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b













re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424










02 Aug, 2016
1 commit









converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9










27 Jun, 2016
2 commits









Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db













Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e










25 Jun, 2016
3 commits









Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6













Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa













Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775










03 Jun, 2016
1 commit









including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea










16 Jan, 2016
2 commits









Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da













fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e










15 Jan, 2016
1 commit









Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1










14 Dec, 2015
3 commits









Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570













Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415













Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8










09 Oct, 2015
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07













updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba










20 Aug, 2015
1 commit









added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844










10 Aug, 2015
2 commits









removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a













extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab










17 Jul, 2015
1 commit









changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d










16 Jul, 2015
3 commits









removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc













fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059













removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd










15 Jul, 2015
1 commit









Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece










10 Jul, 2015
6 commits









Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d













Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56













Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379













Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70













JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a













correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108










09 Jul, 2015
4 commits









fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03













switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44













adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4













skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e










08 Jul, 2015
1 commit









Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678


















Open sidebar



Joshua Garcia heros

Commits







Open sidebar



Joshua Garcia heros

Commits




Open sidebar

Joshua Garcia heros

Commits


Joshua Garciaherosheros
Commits












heros
















08 Feb, 2017
1 commit









changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6










14 Nov, 2016
2 commits









updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe













updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4










18 Aug, 2016
1 commit









updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9










03 Aug, 2016
2 commits









modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b













re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424










02 Aug, 2016
1 commit









converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9










27 Jun, 2016
2 commits









Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db













Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e










25 Jun, 2016
3 commits









Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6













Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa













Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775










03 Jun, 2016
1 commit









including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea










16 Jan, 2016
2 commits









Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da













fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e










15 Jan, 2016
1 commit









Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1










14 Dec, 2015
3 commits









Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570













Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415













Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8










09 Oct, 2015
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07













updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba










20 Aug, 2015
1 commit









added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844










10 Aug, 2015
2 commits









removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a













extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab










17 Jul, 2015
1 commit









changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d










16 Jul, 2015
3 commits









removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc













fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059













removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd










15 Jul, 2015
1 commit









Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece










10 Jul, 2015
6 commits









Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d













Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56













Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379













Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70













JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a













correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108










09 Jul, 2015
4 commits









fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03













switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44













adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4













skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e










08 Jul, 2015
1 commit









Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678























heros
















08 Feb, 2017
1 commit









changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6










14 Nov, 2016
2 commits









updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe













updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4










18 Aug, 2016
1 commit









updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9










03 Aug, 2016
2 commits









modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b













re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424










02 Aug, 2016
1 commit









converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9










27 Jun, 2016
2 commits









Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db













Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e










25 Jun, 2016
3 commits









Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6













Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa













Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775










03 Jun, 2016
1 commit









including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea










16 Jan, 2016
2 commits









Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da













fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e










15 Jan, 2016
1 commit









Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1










14 Dec, 2015
3 commits









Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570













Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415













Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8










09 Oct, 2015
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07













updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba










20 Aug, 2015
1 commit









added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844










10 Aug, 2015
2 commits









removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a













extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab










17 Jul, 2015
1 commit









changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d










16 Jul, 2015
3 commits









removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc













fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059













removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd










15 Jul, 2015
1 commit









Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece










10 Jul, 2015
6 commits









Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d













Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56













Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379













Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70













JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a













correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108










09 Jul, 2015
4 commits









fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03













switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44













adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4













skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e










08 Jul, 2015
1 commit









Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678



















heros


















heros
















heros



heros













08 Feb, 2017
1 commit









changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6










14 Nov, 2016
2 commits









updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe













updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4










18 Aug, 2016
1 commit









updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9










03 Aug, 2016
2 commits









modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b













re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424










02 Aug, 2016
1 commit









converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9










27 Jun, 2016
2 commits









Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db













Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e










25 Jun, 2016
3 commits









Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6













Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa













Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775










03 Jun, 2016
1 commit









including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea










16 Jan, 2016
2 commits









Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da













fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e










15 Jan, 2016
1 commit









Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1










14 Dec, 2015
3 commits









Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570













Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415













Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8










09 Oct, 2015
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07













updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba










20 Aug, 2015
1 commit









added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844










10 Aug, 2015
2 commits









removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a













extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab










17 Jul, 2015
1 commit









changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d










16 Jul, 2015
3 commits









removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc













fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059













removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd










15 Jul, 2015
1 commit









Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece










10 Jul, 2015
6 commits









Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d













Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56













Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379













Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70













JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a













correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108










09 Jul, 2015
4 commits









fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03













switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44













adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4













skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e










08 Jul, 2015
1 commit









Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678











08 Feb, 2017
1 commit
08 Feb, 20171 commit







changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6














changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6










changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017






f2f7c3a6






changes to heros.iml

·
f2f7c3a6


Joshua Garcia authored Feb 08, 2017


·
f2f7c3a6

Joshua Garcia authored Feb 08, 2017




f2f7c3a6






f2f7c3a6




f2f7c3a6

14 Nov, 2016
2 commits
14 Nov, 20162 commits







updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe













updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4














updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe










updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016






13867ffe






updating ant files

·
13867ffe


Joshua Garcia authored Nov 14, 2016


·
13867ffe

Joshua Garcia authored Nov 14, 2016




13867ffe






13867ffe




13867ffe






updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4










updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016






ed0bc8b4






updating ant files

·
ed0bc8b4


Joshua Garcia authored Nov 14, 2016


·
ed0bc8b4

Joshua Garcia authored Nov 14, 2016




ed0bc8b4






ed0bc8b4




ed0bc8b4

18 Aug, 2016
1 commit
18 Aug, 20161 commit







updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9














updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9










updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016






4375cfc9






updated ant files for modules

·
4375cfc9


Joshua Garcia authored Aug 18, 2016


·
4375cfc9

Joshua Garcia authored Aug 18, 2016




4375cfc9






4375cfc9




4375cfc9

03 Aug, 2016
2 commits
03 Aug, 20162 commits







modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b













re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424














modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b










modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016






0ab98d0b






modifying to make this runnable on command line (e.g., HPC)

·
0ab98d0b


Joshua Garcia authored Aug 03, 2016


·
0ab98d0b

Joshua Garcia authored Aug 03, 2016




0ab98d0b






0ab98d0b




0ab98d0b






re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424










re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016






1122c424






re-generated ant build files

·
1122c424


Joshua Garcia authored Aug 03, 2016


·
1122c424

Joshua Garcia authored Aug 03, 2016




1122c424






1122c424




1122c424

02 Aug, 2016
1 commit
02 Aug, 20161 commit







converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9














converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9










converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release





396a5bb9






converted geneticca and phenomonon to work on intellij idea in order to,...

·
396a5bb9




Joshua Garcia authored Aug 02, 2016

converted geneticca and phenomonon to work on intellij idea in order to, hopefully, simplify maintenance and release

·
396a5bb9

Joshua Garcia authored Aug 02, 2016




396a5bb9






396a5bb9




396a5bb9

27 Jun, 2016
2 commits
27 Jun, 20162 commits







Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db













Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e














Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db










Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges





7ab7b4db






Merge pull request #16 from jtoman/develop

·
7ab7b4db




Johannes Lerch authored Jun 28, 2016


Adds method to debug IFDS edges

·
7ab7b4db

Johannes Lerch authored Jun 28, 2016




7ab7b4db






7ab7b4db




7ab7b4db






Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e










Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.





0b65ba9e






Better handling of interprocedural flow edges

·
0b65ba9e




John Toman authored Jun 27, 2016


Previously, we used the containing method of a unit to determine
whether or not a flow edge was interprocedural (roughly, if the
methods of the two endpoints were not equal the edge was judged
to be interprocedural).

This was fine, but missed recursive method calls. To get around this,
we simply save the interprocedural edges and intraprocedural edges
in different tables.

This required changing how we compute the dot file and so there is
more abstraction to reduce code duplication and cut down on complexity.

Finally: this commit reverts a mistaken change to the classpath
adds a default implementation of recordEdges in the default problem
instance, adds name to header comments, and removes the problematic
try-with-resource.

·
0b65ba9e

John Toman authored Jun 27, 2016




0b65ba9e






0b65ba9e




0b65ba9e

25 Jun, 2016
3 commits
25 Jun, 20163 commits







Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6













Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa













Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775














Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6










Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()





8f0b28d6






Bug Fixes, default ItemPrinter

·
8f0b28d6




John Toman authored Jun 25, 2016


Fixes a bug with node labels not being properly escaped for dot.
Also uses Java 7 resource management to handle the PrintWriter for
dot output.

Finally, adds a default printer object that just uses toString()

·
8f0b28d6

John Toman authored Jun 25, 2016




8f0b28d6






8f0b28d6




8f0b28d6






Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa










Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.





986582fa






Adds dot export, expands solver debug configuration

·
986582fa




John Toman authored Jul 04, 2015


In light of the discussion on the PR, I have decided to keep the
new interface in order to preserve backwards compatibility.
While reintroducing this change (which I had removed before
reversing my decision) I noticed that the IFDSSolver did not
pass along the information that the IFDS problem wanted to have
the edges recorded. Fixing this required pulling the anonymous inner
class created by the IFDSSolver into a static inner class (because
this object had to now implement two interfaces, which cannot be done
with anonymous classes).

I also have included the Dot export which led me to add this functionality
to begin with. I have genericized it: users now must provide a class
to handle creating a string representation of the methods, nodes, and facts
in the tabulation problem.

·
986582fa

John Toman authored Jul 04, 2015




986582fa






986582fa




986582fa






Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775










Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.





96192775






Adds method to debug IFDS edges

·
96192775




John Toman authored Jun 25, 2015


Extends the IDE solver to optionally record all intermediate edges created
by the user specified flow functions. These results can be used by
subclasses to debug or visualize the results of the algorithm.

Recording is opt-in, and is specified by the problem instance passed to the
solver. For backwards compatibility a new interface, DebugSolverConfiguration
has been added which currently contains the function: recordEdges which
indicates whether edges should be saved. For backwards compatibility, if the
problem does not implement the interface recordEdges is assumed to be
false.

It is unclear if the fieldsens solver could also be extended, but it has the
Debugger object which maybe (?) could be updated to do something similar.
It's possible that it is desirable to extend the current IDESolver to support
a similar mechanism, which would simply subsume this commit.

·
96192775

John Toman authored Jun 25, 2015




96192775






96192775




96192775

03 Jun, 2016
1 commit
03 Jun, 20161 commit







including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea














including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea










including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.





209cefea






including the callsite in the restore context method. Necessary for

·
209cefea




Johannes Lerch authored Jun 03, 2016

analyses operating directly on Java Bytecode that have to restore an
operand stack.

·
209cefea

Johannes Lerch authored Jun 03, 2016




209cefea






209cefea




209cefea

16 Jan, 2016
2 commits
16 Jan, 20162 commits







Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da













fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e














Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da










Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.





f841c7da






Merge pull request #20 from florian-kuebler/ivy

·
f841c7da




Steven Arzt authored Jan 16, 2016


Added ant target to publish heros jar files to local maven repository using ivy.

·
f841c7da

Steven Arzt authored Jan 16, 2016




f841c7da






f841c7da




f841c7da






fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e










fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016






c0e0203e






fixed local ivy resolver

·
c0e0203e


Florian Kübler authored Jan 16, 2016


·
c0e0203e

Florian Kübler authored Jan 16, 2016




c0e0203e






c0e0203e




c0e0203e

15 Jan, 2016
1 commit
15 Jan, 20161 commit







Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1














Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1










Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016






03466db1






Added ant task to publish heros to local maven repo via ivy

·
03466db1


Florian Kübler authored Jan 15, 2016


·
03466db1

Florian Kübler authored Jan 15, 2016




03466db1






03466db1




03466db1

14 Dec, 2015
3 commits
14 Dec, 20153 commits







Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570













Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415













Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8














Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570










Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015






9e1f2570






Changed ivy artifact names and patterns to remove unnecessary copying of jar files

·
9e1f2570


Florian Kübler authored Dec 14, 2015


·
9e1f2570

Florian Kübler authored Dec 14, 2015




9e1f2570






9e1f2570




9e1f2570






Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415










Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.





f7bcb415






Merge pull request #19 from florian-kuebler/ivy

·
f7bcb415




Steven Arzt authored Dec 14, 2015


Added ant target to publish heros jar files to local ivy repository.

·
f7bcb415

Steven Arzt authored Dec 14, 2015




f7bcb415






f7bcb415




f7bcb415






Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8










Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.





c89d3be8






Added ant target to publish heros jar files to local ivy repository.

·
c89d3be8




Florian Kübler authored Dec 14, 2015

If there is no ivy-plugin for ant installed, the ant script loads ivy.jar from maven-repo and packs it into the ant directory.

·
c89d3be8

Florian Kübler authored Dec 14, 2015




c89d3be8






c89d3be8




c89d3be8

09 Oct, 2015
2 commits
09 Oct, 20152 commits







Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07













updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba














Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07










Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath





7b66dd07






Merge branch 'develop' of github.com:Sable/heros into develop

·
7b66dd07




Steven Arzt authored Oct 09, 2015


Conflicts:
	.classpath

·
7b66dd07

Steven Arzt authored Oct 09, 2015




7b66dd07






7b66dd07




7b66dd07






updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba










updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015






c3065cba






updated the Google guava version

·
c3065cba


Steven Arzt authored Oct 09, 2015


·
c3065cba

Steven Arzt authored Oct 09, 2015




c3065cba






c3065cba




c3065cba

20 Aug, 2015
1 commit
20 Aug, 20151 commit







added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844














added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844










added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015






e0a26844






added missing resolve as empty

·
e0a26844


Johannes Lerch authored Aug 20, 2015


·
e0a26844

Johannes Lerch authored Aug 20, 2015




e0a26844






e0a26844




e0a26844

10 Aug, 2015
2 commits
10 Aug, 20152 commits







removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a













extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab














removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a










removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015






8b53877a






removing trailing commas

·
8b53877a


Johannes Lerch authored Aug 10, 2015


·
8b53877a

Johannes Lerch authored Aug 10, 2015




8b53877a






8b53877a




8b53877a






extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab










extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015






d3cd36ab






extending debugger interface

·
d3cd36ab


Johannes Lerch authored Aug 10, 2015


·
d3cd36ab

Johannes Lerch authored Aug 10, 2015




d3cd36ab






d3cd36ab




d3cd36ab

17 Jul, 2015
1 commit
17 Jul, 20151 commit







changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d














changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d










changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015






9ce26e5d






changing nested resolver trees to graphs + test cases

·
9ce26e5d


Johannes Lerch authored Jul 17, 2015


·
9ce26e5d

Johannes Lerch authored Jul 17, 2015




9ce26e5d






9ce26e5d




9ce26e5d

16 Jul, 2015
3 commits
16 Jul, 20153 commits







removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc













fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059













removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd














removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc










removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015






83cffedc






removing Java 7 dependency

·
83cffedc


Johannes Lerch authored Jul 16, 2015


·
83cffedc

Johannes Lerch authored Jul 16, 2015




83cffedc






83cffedc




83cffedc






fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059










fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015






49aed059






fixed access path of return edge

·
49aed059


Johannes Lerch authored Jul 16, 2015


·
49aed059

Johannes Lerch authored Jul 16, 2015




49aed059






49aed059




49aed059






removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd










removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015






c5871abd






removing dead code

·
c5871abd


Johannes Lerch authored Jul 16, 2015


·
c5871abd

Johannes Lerch authored Jul 16, 2015




c5871abd






c5871abd




c5871abd

15 Jul, 2015
1 commit
15 Jul, 20151 commit







Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece














Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece










Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015






0c4f8ece






Always register callbacks

·
0c4f8ece


Johannes Lerch authored Jul 15, 2015


·
0c4f8ece

Johannes Lerch authored Jul 15, 2015




0c4f8ece






0c4f8ece




0c4f8ece

10 Jul, 2015
6 commits
10 Jul, 20156 commits







Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d













Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56













Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379













Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70













JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a













correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108














Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d










Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015






5f4abd6d






Propagating ZeroCallEdgeResolver over call edges

·
5f4abd6d


Johannes Lerch authored Jul 10, 2015


·
5f4abd6d

Johannes Lerch authored Jul 10, 2015




5f4abd6d






5f4abd6d




5f4abd6d






Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56










Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver





a8069d56






Propagate ZeroCallEdgeResolver instead of ReturnSiteResolver if resolved

·
a8069d56




Johannes Lerch authored Jul 10, 2015

via ZeroCallEdgeResolver

·
a8069d56

Johannes Lerch authored Jul 10, 2015




a8069d56






a8069d56




a8069d56






Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379










Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015






5f06e379






Fixing wrong debugger forwarding in BiDi

·
5f06e379


Johannes Lerch authored Jul 10, 2015


·
5f06e379

Johannes Lerch authored Jul 10, 2015




5f06e379






5f06e379




5f06e379






Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70










Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015






5be84c70






Merge branch 'jl-skip-resolvers' into develop

·
5be84c70


Johannes Lerch authored Jul 10, 2015


·
5be84c70

Johannes Lerch authored Jul 10, 2015




5be84c70






5be84c70




5be84c70






JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a










JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015






7790198a






JoinStmts only for loops

·
7790198a


Johannes Lerch authored Jul 10, 2015


·
7790198a

Johannes Lerch authored Jul 10, 2015




7790198a






7790198a




7790198a






correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108










correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges





fe2c8108






correct handling of ZeroCallEdgeResolver as incoming resolver on return

·
fe2c8108




Johannes Lerch authored Jul 10, 2015

edges

·
fe2c8108

Johannes Lerch authored Jul 10, 2015




fe2c8108






fe2c8108




fe2c8108

09 Jul, 2015
4 commits
09 Jul, 20154 commits







fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03













switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44













adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4













skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e














fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03










fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015






92493a03






fixing concurrent modification

·
92493a03


Johannes Lerch authored Jul 09, 2015


·
92493a03

Johannes Lerch authored Jul 09, 2015




92493a03






92493a03




92493a03






switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44










switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015






6755ed44






switching to concrete class and maven project

·
6755ed44


Johannes Lerch authored Jul 06, 2015


·
6755ed44

Johannes Lerch authored Jul 06, 2015




6755ed44






6755ed44




6755ed44






adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4










adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015






b67fe4e4






adapting testcases to changed behavior

·
b67fe4e4


Johannes Lerch authored Jul 09, 2015


·
b67fe4e4

Johannes Lerch authored Jul 09, 2015




b67fe4e4






b67fe4e4




b67fe4e4






skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e










skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015






0c22069e






skipping resolvers if interest is transitively given

·
0c22069e


Johannes Lerch authored Jul 09, 2015


·
0c22069e

Johannes Lerch authored Jul 09, 2015




0c22069e






0c22069e




0c22069e

08 Jul, 2015
1 commit
08 Jul, 20151 commit







Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678














Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678










Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.





6c9e0678






Merge pull request #18 from KengoTODA/fix-param-for-slf4j

·
6c9e0678




Steven Arzt authored Jul 08, 2015


Use proper class to get logger from LoggerFactory.

·
6c9e0678

Steven Arzt authored Jul 08, 2015




6c9e0678






6c9e0678




6c9e0678






