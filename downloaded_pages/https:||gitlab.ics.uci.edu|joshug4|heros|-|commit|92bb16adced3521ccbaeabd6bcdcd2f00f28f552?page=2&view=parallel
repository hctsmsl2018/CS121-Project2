



GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab


















Projects
Groups
Snippets



GitLab






GitLab









Projects
Groups
Snippets






Projects
Groups
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Joshua Garcia heros
Commits

92bb16ad















Commit
92bb16ad


authored
Nov 28, 2012
by


Eric Bodden



Browse files




renamed package







parent
4a2f9755













Changes
40




Hide whitespace changes

Inline
Side-by-side















src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......















src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......















src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......















src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......















src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......















src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......















src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......















src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......















src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......















src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......















src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......















src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......















src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......















src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......










Prev


1


2


Next















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Joshua Garcia heros
Commits

92bb16ad















Commit
92bb16ad


authored
Nov 28, 2012
by


Eric Bodden



Browse files




renamed package







parent
4a2f9755













Changes
40




Hide whitespace changes

Inline
Side-by-side















src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......















src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......















src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......















src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......















src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......















src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......















src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......















src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......















src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......















src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......















src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......















src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......















src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......















src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......










Prev


1


2


Next















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Open sidebar



Joshua Garcia heros
Commits

92bb16ad







Open sidebar



Joshua Garcia heros
Commits

92bb16ad




Open sidebar

Joshua Garcia heros
Commits

92bb16ad


Joshua GarciaherosherosCommits
92bb16ad








Commit
92bb16ad


authored
Nov 28, 2012
by


Eric Bodden



Browse files




renamed package







parent
4a2f9755













Changes
40




Hide whitespace changes

Inline
Side-by-side















src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......















src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......















src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......















src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......















src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......















src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......















src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......















src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......















src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......















src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......















src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......















src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......















src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......















src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......










Prev


1


2


Next















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










Commit
92bb16ad


authored
Nov 28, 2012
by


Eric Bodden



Browse files




renamed package







parent
4a2f9755













Changes
40




Hide whitespace changes

Inline
Side-by-side















src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......















src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......















src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......















src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......















src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......















src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......















src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......















src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......















src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......















src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......















src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......















src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......















src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......















src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......










Prev


1


2


Next















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment






Commit
92bb16ad


authored
Nov 28, 2012
by


Eric Bodden



Browse files



Commit
92bb16ad


authored
Nov 28, 2012
by


Eric Bodden

92bb16adauthoredbyEric Bodden

renamed package






parent
4a2f9755
















parent
4a2f9755





parent












Changes
40
40


Hide whitespace changes

Inline
Side-by-side






Hide whitespace changes

Inline
Side-by-side




Hide whitespace changes

Inline
Side-by-side


Inline
Side-by-side










src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......















src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......















src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......















src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......















src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......















src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......















src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......















src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......















src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......















src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......















src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......















src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......















src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......















src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......















src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......















src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......















src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......










Prev


1


2


Next













src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......













src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/edgefunc/EdgeIdentity.java

→

src/de/bodden/ide/edgefunc/EdgeIdentity.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......













package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......










package soot.jimple.interproc.ifds.edgefunc;





package de.bodden.ide.edgefunc;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;





















/**





/**







 * The identity function on graph edges





 * The identity function on graph edges



......


package soot.jimple.interproc.ifds.edgefunc;packagesoot.jimple.interproc.ifds.edgefuncsoot.jimple.interproc.ifds;package de.bodden.ide.edgefunc;packagede.bodden.ide.edgefuncde.bodden.ide;import soot.jimple.interproc.ifds.EdgeFunction;importsoot.jimple.interproc.ifds.EdgeFunctionsoot.jimple.interproc.ifds;import de.bodden.ide.EdgeFunction;importde.bodden.ide.EdgeFunctionde.bodden.ide;/**/**/**/** * The identity function on graph edges * The identity function on graph edges * The identity function on graph edges * The identity function on graph edges








src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......













src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/flowfunc/Compose.java

→

src/de/bodden/ide/flowfunc/Compose.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......













package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......










package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;























import com.google.common.collect.Sets;





import com.google.common.collect.Sets;























import de.bodden.ide.FlowFunction;

















/**





/**







 * Represents the ordered composition of a set of flow functions.





 * Represents the ordered composition of a set of flow functions.







 */





 */



......


package soot.jimple.interproc.ifds.flowfunc;packagesoot.jimple.interproc.ifds.flowfuncsoot.jimple.interproc.ifds;package de.bodden.ide.flowfunc;packagede.bodden.ide.flowfuncde.bodden.ide;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import com.google.common.collect.Sets;importcom.google.common.collect.Sets;import com.google.common.collect.Sets;importcom.google.common.collect.Sets;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;/**/**/**/** * Represents the ordered composition of a set of flow functions. * Represents the ordered composition of a set of flow functions. * Represents the ordered composition of a set of flow functions. * Represents the ordered composition of a set of flow functions. */ */ */ */








src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......













src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/flowfunc/Gen.java

→

src/de/bodden/ide/flowfunc/Gen.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......













package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......










package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that creates a new value (e.g. returns a set containing a fixed value when given





 * Function that creates a new value (e.g. returns a set containing a fixed value when given



......


package soot.jimple.interproc.ifds.flowfunc;packagesoot.jimple.interproc.ifds.flowfuncsoot.jimple.interproc.ifds;package de.bodden.ide.flowfunc;packagede.bodden.ide.flowfuncde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.HashSet;importjava.util.HashSet;import java.util.HashSet;importjava.util.HashSet;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;/**/**/**/** * Function that creates a new value (e.g. returns a set containing a fixed value when given * Function that creates a new value (e.g. returns a set containing a fixed value when given * Function that creates a new value (e.g. returns a set containing a fixed value when given * Function that creates a new value (e.g. returns a set containing a fixed value when given








src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......













src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/flowfunc/Identity.java

→

src/de/bodden/ide/flowfunc/Identity.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......













package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......










package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Identity<D> implements FlowFunction<D> {





public class Identity<D> implements FlowFunction<D> {







 





 



......


package soot.jimple.interproc.ifds.flowfunc;packagesoot.jimple.interproc.ifds.flowfuncsoot.jimple.interproc.ifds;package de.bodden.ide.flowfunc;packagede.bodden.ide.flowfuncde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;public class Identity<D> implements FlowFunction<D> {publicclassIdentity<D>implementsFlowFunction<D>{public class Identity<D> implements FlowFunction<D> {publicclassIdentity<D>implementsFlowFunction<D>{  








src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......













src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/flowfunc/Kill.java

→

src/de/bodden/ide/flowfunc/Kill.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......













package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......










package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * Function that kills a specific value (i.e. returns an empty set for when given this





 * Function that kills a specific value (i.e. returns an empty set for when given this



......


package soot.jimple.interproc.ifds.flowfunc;packagesoot.jimple.interproc.ifds.flowfuncsoot.jimple.interproc.ifds;package de.bodden.ide.flowfunc;packagede.bodden.ide.flowfuncde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;/**/**/**/** * Function that kills a specific value (i.e. returns an empty set for when given this * Function that kills a specific value (i.e. returns an empty set for when given this * Function that kills a specific value (i.e. returns an empty set for when given this * Function that kills a specific value (i.e. returns an empty set for when given this








src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......













src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/flowfunc/KillAll.java

→

src/de/bodden/ide/flowfunc/KillAll.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......













package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......










package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































/**





/**







 * The empty function, i.e. a function which returns an empty set for all points





 * The empty function, i.e. a function which returns an empty set for all points



......


package soot.jimple.interproc.ifds.flowfunc;packagesoot.jimple.interproc.ifds.flowfuncsoot.jimple.interproc.ifds;package de.bodden.ide.flowfunc;packagede.bodden.ide.flowfuncde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;/**/**/**/** * The empty function, i.e. a function which returns an empty set for all points * The empty function, i.e. a function which returns an empty set for all points * The empty function, i.e. a function which returns an empty set for all points * The empty function, i.e. a function which returns an empty set for all points








src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......













src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/flowfunc/Transfer.java

→

src/de/bodden/ide/flowfunc/Transfer.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......













package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......










package soot.jimple.interproc.ifds.flowfunc;





package de.bodden.ide.flowfunc;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashSet;





import java.util.HashSet;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.FlowFunction;





import de.bodden.ide.FlowFunction;































public class Transfer<D> implements FlowFunction<D> {





public class Transfer<D> implements FlowFunction<D> {







 





 



......


package soot.jimple.interproc.ifds.flowfunc;packagesoot.jimple.interproc.ifds.flowfuncsoot.jimple.interproc.ifds;package de.bodden.ide.flowfunc;packagede.bodden.ide.flowfuncde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.HashSet;importjava.util.HashSet;import java.util.HashSet;importjava.util.HashSet;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;public class Transfer<D> implements FlowFunction<D> {publicclassTransfer<D>implementsFlowFunction<D>{public class Transfer<D> implements FlowFunction<D> {publicclassTransfer<D>implementsFlowFunction<D>{  








src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......













src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/problems/IFDSLocalInfoFlow.java

→

src/de/bodden/ide/problems/IFDSLocalInfoFlow.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......













package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......










package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;







import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Gen;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.flowfunc.Transfer;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;
...@@ -19,15 +29,6 @@ import soot.jimple.ParameterRef;






import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Gen;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.flowfunc.Transfer;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;























public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {

















......


package soot.jimple.interproc.ifds.problems;packagesoot.jimple.interproc.ifds.problemssoot.jimple.interproc.ifds;package de.bodden.ide.problems;packagede.bodden.ide.problemsde.bodden.ide;import java.util.ArrayList;importjava.util.ArrayList;import java.util.ArrayList;importjava.util.ArrayList;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.List;importjava.util.List;import java.util.List;importjava.util.List;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.flowfunc.Gen;importde.bodden.ide.flowfunc.Gen;import de.bodden.ide.flowfunc.Identity;importde.bodden.ide.flowfunc.Identity;import de.bodden.ide.flowfunc.Kill;importde.bodden.ide.flowfunc.Kill;import de.bodden.ide.flowfunc.KillAll;importde.bodden.ide.flowfunc.KillAll;import de.bodden.ide.flowfunc.Transfer;importde.bodden.ide.flowfunc.Transfer;import de.bodden.ide.template.DefaultIFDSTabulationProblem;importde.bodden.ide.template.DefaultIFDSTabulationProblem;import soot.Local;importsoot.Local;import soot.Local;importsoot.Local;import soot.NullType;importsoot.NullType;import soot.NullType;importsoot.NullType;import soot.Scene;importsoot.Scene;import soot.Scene;importsoot.Scene;import soot.jimple.ReturnStmt;importsoot.jimple.ReturnStmt;import soot.jimple.ReturnStmt;importsoot.jimple.ReturnStmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.internal.JimpleLocal;importsoot.jimple.internal.JimpleLocal;import soot.jimple.internal.JimpleLocal;importsoot.jimple.internal.JimpleLocal;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.flowfunc.Gen;importsoot.jimple.interproc.ifds.flowfunc.Gen;import soot.jimple.interproc.ifds.flowfunc.Identity;importsoot.jimple.interproc.ifds.flowfunc.Identity;import soot.jimple.interproc.ifds.flowfunc.Kill;importsoot.jimple.interproc.ifds.flowfunc.Kill;import soot.jimple.interproc.ifds.flowfunc.KillAll;importsoot.jimple.interproc.ifds.flowfunc.KillAll;import soot.jimple.interproc.ifds.flowfunc.Transfer;importsoot.jimple.interproc.ifds.flowfunc.Transfer;import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;importsoot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {publicclassIFDSLocalInfoFlowextendsDefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit,SootMethod>>{public class IFDSLocalInfoFlow extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {publicclassIFDSLocalInfoFlowextendsDefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit,SootMethod>>{








src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......













src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/problems/IFDSPossibleTypes.java

→

src/de/bodden/ide/problems/IFDSPossibleTypes.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......













package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......










package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.PointsToAnalysis;





import soot.PointsToAnalysis;







import soot.PointsToSet;





import soot.PointsToSet;



...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;
...@@ -26,12 +33,6 @@ import soot.jimple.NewExpr;






import soot.jimple.Ref;





import soot.jimple.Ref;







import soot.jimple.ReturnStmt;





import soot.jimple.ReturnStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















@SuppressWarnings("serial")





@SuppressWarnings("serial")



......


package soot.jimple.interproc.ifds.problems;packagesoot.jimple.interproc.ifds.problemssoot.jimple.interproc.ifds;package de.bodden.ide.problems;packagede.bodden.ide.problemsde.bodden.ide;import java.util.ArrayList;importjava.util.ArrayList;import java.util.ArrayList;importjava.util.ArrayList;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.List;importjava.util.List;import java.util.List;importjava.util.List;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.flowfunc.Identity;importde.bodden.ide.flowfunc.Identity;import de.bodden.ide.flowfunc.KillAll;importde.bodden.ide.flowfunc.KillAll;import de.bodden.ide.template.DefaultIFDSTabulationProblem;importde.bodden.ide.template.DefaultIFDSTabulationProblem;import soot.Local;importsoot.Local;import soot.Local;importsoot.Local;import soot.PointsToAnalysis;importsoot.PointsToAnalysis;import soot.PointsToAnalysis;importsoot.PointsToAnalysis;import soot.PointsToSet;importsoot.PointsToSet;import soot.PointsToSet;importsoot.PointsToSet;import soot.jimple.Ref;importsoot.jimple.Ref;import soot.jimple.Ref;importsoot.jimple.Ref;import soot.jimple.ReturnStmt;importsoot.jimple.ReturnStmt;import soot.jimple.ReturnStmt;importsoot.jimple.ReturnStmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.flowfunc.Identity;importsoot.jimple.interproc.ifds.flowfunc.Identity;import soot.jimple.interproc.ifds.flowfunc.KillAll;importsoot.jimple.interproc.ifds.flowfunc.KillAll;import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;importsoot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;import soot.toolkits.scalar.Pair;importsoot.toolkits.scalar.Pair;import soot.toolkits.scalar.Pair;importsoot.toolkits.scalar.Pair;@SuppressWarnings("serial")@SuppressWarnings("serial")@SuppressWarnings("serial")@SuppressWarnings("serial")








src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......













src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/problems/IFDSReachingDefinitions.java

→

src/de/bodden/ide/problems/IFDSReachingDefinitions.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......













package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......










package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,13 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.EquivalentValue;





import soot.EquivalentValue;







import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;



...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -20,12 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.ReturnVoidStmt;





import soot.jimple.ReturnVoidStmt;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {



......


package soot.jimple.interproc.ifds.problems;packagesoot.jimple.interproc.ifds.problemssoot.jimple.interproc.ifds;package de.bodden.ide.problems;packagede.bodden.ide.problemsde.bodden.ide;import java.util.ArrayList;importjava.util.ArrayList;import java.util.ArrayList;importjava.util.ArrayList;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.List;importjava.util.List;import java.util.List;importjava.util.List;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.flowfunc.Identity;importde.bodden.ide.flowfunc.Identity;import de.bodden.ide.flowfunc.KillAll;importde.bodden.ide.flowfunc.KillAll;import de.bodden.ide.template.DefaultIFDSTabulationProblem;importde.bodden.ide.template.DefaultIFDSTabulationProblem;import soot.EquivalentValue;importsoot.EquivalentValue;import soot.EquivalentValue;importsoot.EquivalentValue;import soot.Local;importsoot.Local;import soot.Local;importsoot.Local;import soot.NullType;importsoot.NullType;import soot.NullType;importsoot.NullType;import soot.jimple.ReturnVoidStmt;importsoot.jimple.ReturnVoidStmt;import soot.jimple.ReturnVoidStmt;importsoot.jimple.ReturnVoidStmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.internal.JimpleLocal;importsoot.jimple.internal.JimpleLocal;import soot.jimple.internal.JimpleLocal;importsoot.jimple.internal.JimpleLocal;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.flowfunc.Identity;importsoot.jimple.interproc.ifds.flowfunc.Identity;import soot.jimple.interproc.ifds.flowfunc.KillAll;importsoot.jimple.interproc.ifds.flowfunc.KillAll;import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;importsoot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;import soot.toolkits.scalar.Pair;importsoot.toolkits.scalar.Pair;import soot.toolkits.scalar.Pair;importsoot.toolkits.scalar.Pair;public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {publicclassIFDSReachingDefinitionsextendsDefaultIFDSTabulationProblem<Pair<Value,Set<DefinitionStmt>>,InterproceduralCFG<Unit,SootMethod>>{public class IFDSReachingDefinitions extends DefaultIFDSTabulationProblem<Pair<Value, Set<DefinitionStmt>>,InterproceduralCFG<Unit, SootMethod>> {publicclassIFDSReachingDefinitionsextendsDefaultIFDSTabulationProblem<Pair<Value,Set<DefinitionStmt>>,InterproceduralCFG<Unit,SootMethod>>{








src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......













src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/problems/IFDSUninitializedVariables.java

→

src/de/bodden/ide/problems/IFDSUninitializedVariables.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......













package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......










package soot.jimple.interproc.ifds.problems;





package de.bodden.ide.problems;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.Collections;





import java.util.Collections;



...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;
...@@ -6,6 +6,14 @@ import java.util.LinkedHashSet;






import java.util.List;





import java.util.List;







import java.util.Set;





import java.util.Set;























import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.flowfunc.Identity;









import de.bodden.ide.flowfunc.Kill;









import de.bodden.ide.flowfunc.KillAll;









import de.bodden.ide.template.DefaultIFDSTabulationProblem;

















import soot.Local;





import soot.Local;







import soot.NullType;





import soot.NullType;







import soot.Scene;





import soot.Scene;



...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;
...@@ -19,13 +27,6 @@ import soot.jimple.ReturnStmt;






import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.ThrowStmt;





import soot.jimple.ThrowStmt;







import soot.jimple.internal.JimpleLocal;





import soot.jimple.internal.JimpleLocal;







import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.flowfunc.Identity;









import soot.jimple.interproc.ifds.flowfunc.Kill;









import soot.jimple.interproc.ifds.flowfunc.KillAll;









import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;









import soot.util.Chain;





import soot.util.Chain;





















public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {





public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {



......


package soot.jimple.interproc.ifds.problems;packagesoot.jimple.interproc.ifds.problemssoot.jimple.interproc.ifds;package de.bodden.ide.problems;packagede.bodden.ide.problemsde.bodden.ide;import java.util.ArrayList;importjava.util.ArrayList;import java.util.ArrayList;importjava.util.ArrayList;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.List;importjava.util.List;import java.util.List;importjava.util.List;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.flowfunc.Identity;importde.bodden.ide.flowfunc.Identity;import de.bodden.ide.flowfunc.Kill;importde.bodden.ide.flowfunc.Kill;import de.bodden.ide.flowfunc.KillAll;importde.bodden.ide.flowfunc.KillAll;import de.bodden.ide.template.DefaultIFDSTabulationProblem;importde.bodden.ide.template.DefaultIFDSTabulationProblem;import soot.Local;importsoot.Local;import soot.Local;importsoot.Local;import soot.NullType;importsoot.NullType;import soot.NullType;importsoot.NullType;import soot.Scene;importsoot.Scene;import soot.Scene;importsoot.Scene;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.ThrowStmt;importsoot.jimple.ThrowStmt;import soot.jimple.ThrowStmt;importsoot.jimple.ThrowStmt;import soot.jimple.internal.JimpleLocal;importsoot.jimple.internal.JimpleLocal;import soot.jimple.internal.JimpleLocal;importsoot.jimple.internal.JimpleLocal;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.flowfunc.Identity;importsoot.jimple.interproc.ifds.flowfunc.Identity;import soot.jimple.interproc.ifds.flowfunc.Kill;importsoot.jimple.interproc.ifds.flowfunc.Kill;import soot.jimple.interproc.ifds.flowfunc.KillAll;importsoot.jimple.interproc.ifds.flowfunc.KillAll;import soot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;importsoot.jimple.interproc.ifds.template.DefaultIFDSTabulationProblem;import soot.util.Chain;importsoot.util.Chain;import soot.util.Chain;importsoot.util.Chain;public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {publicclassIFDSUninitializedVariablesextendsDefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit,SootMethod>>{public class IFDSUninitializedVariables extends DefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit, SootMethod>> {publicclassIFDSUninitializedVariablesextendsDefaultIFDSTabulationProblem<Local,InterproceduralCFG<Unit,SootMethod>>{








src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......













src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/solver/IDESolver.java

→

src/de/bodden/ide/solver/IDESolver.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......













package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......










package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;



































import java.io.FileNotFoundException;





import java.io.FileNotFoundException;



...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;
...@@ -24,19 +24,6 @@ import java.util.concurrent.atomic.AtomicInteger;






import soot.PatchingChain;





import soot.PatchingChain;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctionCache;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.FlowFunction;









import soot.jimple.interproc.ifds.FlowFunctionCache;









import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ZeroedFlowFunctions;









import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;









import soot.toolkits.scalar.Pair;





import soot.toolkits.scalar.Pair;





















import com.google.common.base.Predicate;





import com.google.common.base.Predicate;



...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;
...@@ -46,6 +33,20 @@ import com.google.common.collect.Maps;






import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctionCache;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.FlowFunction;









import de.bodden.ide.FlowFunctionCache;









import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ZeroedFlowFunctions;









import de.bodden.ide.edgefunc.EdgeIdentity;

















/**





/**







 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,





 * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv,







 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be





 * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be



......


package soot.jimple.interproc.ifds.solver;packagesoot.jimple.interproc.ifds.solversoot.jimple.interproc.ifds;package de.bodden.ide.solver;packagede.bodden.ide.solverde.bodden.ide;import java.io.FileNotFoundException;importjava.io.FileNotFoundException;import java.io.FileNotFoundException;importjava.io.FileNotFoundException;import soot.PatchingChain;importsoot.PatchingChain;import soot.PatchingChain;importsoot.PatchingChain;import soot.SootMethod;importsoot.SootMethod;import soot.SootMethod;importsoot.SootMethod;import soot.Unit;importsoot.Unit;import soot.Unit;importsoot.Unit;import soot.jimple.interproc.ifds.DontSynchronize;importsoot.jimple.interproc.ifds.DontSynchronize;import soot.jimple.interproc.ifds.EdgeFunction;importsoot.jimple.interproc.ifds.EdgeFunction;import soot.jimple.interproc.ifds.EdgeFunctionCache;importsoot.jimple.interproc.ifds.EdgeFunctionCache;import soot.jimple.interproc.ifds.EdgeFunctions;importsoot.jimple.interproc.ifds.EdgeFunctions;import soot.jimple.interproc.ifds.FlowFunction;importsoot.jimple.interproc.ifds.FlowFunction;import soot.jimple.interproc.ifds.FlowFunctionCache;importsoot.jimple.interproc.ifds.FlowFunctionCache;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import soot.jimple.interproc.ifds.IDETabulationProblem;importsoot.jimple.interproc.ifds.IDETabulationProblem;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.JoinLattice;importsoot.jimple.interproc.ifds.JoinLattice;import soot.jimple.interproc.ifds.SynchronizedBy;importsoot.jimple.interproc.ifds.SynchronizedBy;import soot.jimple.interproc.ifds.ZeroedFlowFunctions;importsoot.jimple.interproc.ifds.ZeroedFlowFunctions;import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;importsoot.jimple.interproc.ifds.edgefunc.EdgeIdentity;import soot.toolkits.scalar.Pair;importsoot.toolkits.scalar.Pair;import soot.toolkits.scalar.Pair;importsoot.toolkits.scalar.Pair;import com.google.common.base.Predicate;importcom.google.common.base.Predicate;import com.google.common.base.Predicate;importcom.google.common.base.Predicate;import com.google.common.collect.Table;importcom.google.common.collect.Table;import com.google.common.collect.Table;importcom.google.common.collect.Table;import com.google.common.collect.Table.Cell;importcom.google.common.collect.Table.Cell;import com.google.common.collect.Table.Cell;importcom.google.common.collect.Table.Cell;import de.bodden.ide.DontSynchronize;importde.bodden.ide.DontSynchronize;import de.bodden.ide.EdgeFunction;importde.bodden.ide.EdgeFunction;import de.bodden.ide.EdgeFunctionCache;importde.bodden.ide.EdgeFunctionCache;import de.bodden.ide.EdgeFunctions;importde.bodden.ide.EdgeFunctions;import de.bodden.ide.FlowFunction;importde.bodden.ide.FlowFunction;import de.bodden.ide.FlowFunctionCache;importde.bodden.ide.FlowFunctionCache;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import de.bodden.ide.IDETabulationProblem;importde.bodden.ide.IDETabulationProblem;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.JoinLattice;importde.bodden.ide.JoinLattice;import de.bodden.ide.SynchronizedBy;importde.bodden.ide.SynchronizedBy;import de.bodden.ide.ZeroedFlowFunctions;importde.bodden.ide.ZeroedFlowFunctions;import de.bodden.ide.edgefunc.EdgeIdentity;importde.bodden.ide.edgefunc.EdgeIdentity;/**/**/**/** * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv, * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv, * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv, * Solves the given {@link IDETabulationProblem} as described in the 1996 paper by Sagiv, * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be * Horwitz and Reps. To solve the problem, call {@link #solve()}. Results can then be








src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......













src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/solver/IFDSSolver.java

→

src/de/bodden/ide/solver/IFDSSolver.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......













package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......










package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;







import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;





import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;





















import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.EdgeFunction;





import de.bodden.ide.EdgeFunction;







import soot.jimple.interproc.ifds.EdgeFunctions;





import de.bodden.ide.EdgeFunctions;







import soot.jimple.interproc.ifds.FlowFunctions;





import de.bodden.ide.FlowFunctions;







import soot.jimple.interproc.ifds.IDETabulationProblem;





import de.bodden.ide.IDETabulationProblem;







import soot.jimple.interproc.ifds.IFDSTabulationProblem;





import de.bodden.ide.IFDSTabulationProblem;







import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;







import soot.jimple.interproc.ifds.JoinLattice;





import de.bodden.ide.JoinLattice;







import soot.jimple.interproc.ifds.edgefunc.AllBottom;





import de.bodden.ide.edgefunc.AllBottom;







import soot.jimple.interproc.ifds.edgefunc.AllTop;





import de.bodden.ide.edgefunc.AllTop;







import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;





import de.bodden.ide.edgefunc.EdgeIdentity;































/**





/**







 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}





 * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}



......


package soot.jimple.interproc.ifds.solver;packagesoot.jimple.interproc.ifds.solversoot.jimple.interproc.ifds;package de.bodden.ide.solver;packagede.bodden.ide.solverde.bodden.ide;import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.BOTTOM;importstaticsootsoot..jimplejimple..interprocinterproc..ifdsifds.solver.IFDSSolver.BinaryDomain.BOTTOM;import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.BOTTOM;importstaticdede..boddenbodden..ideide.solver.IFDSSolver.BinaryDomain.BOTTOM;import static soot.jimple.interproc.ifds.solver.IFDSSolver.BinaryDomain.TOP;importstaticsootsoot..jimplejimple..interprocinterproc..ifdsifds.solver.IFDSSolver.BinaryDomain.TOP;import static de.bodden.ide.solver.IFDSSolver.BinaryDomain.TOP;importstaticdede..boddenbodden..ideide.solver.IFDSSolver.BinaryDomain.TOP;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.EdgeFunction;importsoot.jimple.interproc.ifds.EdgeFunction;import de.bodden.ide.EdgeFunction;importde.bodden.ide.EdgeFunction;import soot.jimple.interproc.ifds.EdgeFunctions;importsoot.jimple.interproc.ifds.EdgeFunctions;import de.bodden.ide.EdgeFunctions;importde.bodden.ide.EdgeFunctions;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import soot.jimple.interproc.ifds.IDETabulationProblem;importsoot.jimple.interproc.ifds.IDETabulationProblem;import de.bodden.ide.IDETabulationProblem;importde.bodden.ide.IDETabulationProblem;import soot.jimple.interproc.ifds.IFDSTabulationProblem;importsoot.jimple.interproc.ifds.IFDSTabulationProblem;import de.bodden.ide.IFDSTabulationProblem;importde.bodden.ide.IFDSTabulationProblem;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import soot.jimple.interproc.ifds.JoinLattice;importsoot.jimple.interproc.ifds.JoinLattice;import de.bodden.ide.JoinLattice;importde.bodden.ide.JoinLattice;import soot.jimple.interproc.ifds.edgefunc.AllBottom;importsoot.jimple.interproc.ifds.edgefunc.AllBottom;import de.bodden.ide.edgefunc.AllBottom;importde.bodden.ide.edgefunc.AllBottom;import soot.jimple.interproc.ifds.edgefunc.AllTop;importsoot.jimple.interproc.ifds.edgefunc.AllTop;import de.bodden.ide.edgefunc.AllTop;importde.bodden.ide.edgefunc.AllTop;import soot.jimple.interproc.ifds.edgefunc.EdgeIdentity;importsoot.jimple.interproc.ifds.edgefunc.EdgeIdentity;import de.bodden.ide.edgefunc.EdgeIdentity;importde.bodden.ide.edgefunc.EdgeIdentity;/**/**/**/** * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver} * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver} * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver} * A solver for an {@link IFDSTabulationProblem}. This solver in effect uses the {@link IDESolver}








src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......













src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/solver/JumpFunctions.java

→

src/de/bodden/ide/solver/JumpFunctions.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......













package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......










package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.HashMap;





import java.util.HashMap;



...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;
...@@ -6,15 +6,16 @@ import java.util.LinkedHashMap;






import java.util.Map;





import java.util.Map;







import java.util.Set;





import java.util.Set;





















import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;







import com.google.common.collect.Table.Cell;





import com.google.common.collect.Table.Cell;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three





 * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three







 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses





 * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses



......


package soot.jimple.interproc.ifds.solver;packagesoot.jimple.interproc.ifds.solversoot.jimple.interproc.ifds;package de.bodden.ide.solver;packagede.bodden.ide.solverde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.HashMap;importjava.util.HashMap;import java.util.HashMap;importjava.util.HashMap;import java.util.Map;importjava.util.Map;import java.util.Map;importjava.util.Map;import java.util.Set;importjava.util.Set;import java.util.Set;importjava.util.Set;import soot.jimple.interproc.ifds.DontSynchronize;importsoot.jimple.interproc.ifds.DontSynchronize;import soot.jimple.interproc.ifds.EdgeFunction;importsoot.jimple.interproc.ifds.EdgeFunction;import soot.jimple.interproc.ifds.SynchronizedBy;importsoot.jimple.interproc.ifds.SynchronizedBy;import soot.jimple.interproc.ifds.ThreadSafe;importsoot.jimple.interproc.ifds.ThreadSafe;import com.google.common.collect.HashBasedTable;importcom.google.common.collect.HashBasedTable;import com.google.common.collect.HashBasedTable;importcom.google.common.collect.HashBasedTable;import com.google.common.collect.Table;importcom.google.common.collect.Table;import com.google.common.collect.Table;importcom.google.common.collect.Table;import com.google.common.collect.Table.Cell;importcom.google.common.collect.Table.Cell;import com.google.common.collect.Table.Cell;importcom.google.common.collect.Table.Cell;import de.bodden.ide.DontSynchronize;importde.bodden.ide.DontSynchronize;import de.bodden.ide.EdgeFunction;importde.bodden.ide.EdgeFunction;import de.bodden.ide.SynchronizedBy;importde.bodden.ide.SynchronizedBy;import de.bodden.ide.ThreadSafe;importde.bodden.ide.ThreadSafe;/**/**/**/** * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three * The IDE algorithm uses a list of jump functions. Instead of a list, we use a set of three * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses * maps that are kept in sync. This allows for efficient indexing: the algorithm accesses








src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......













src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/solver/PathEdge.java

→

src/de/bodden/ide/solver/PathEdge.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......













package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......










package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import soot.jimple.interproc.ifds.InterproceduralCFG;





import de.bodden.ide.InterproceduralCFG;





















/**





/**







 * A path edge as described in the IFDS/IDE algorithms.





 * A path edge as described in the IFDS/IDE algorithms.



......


package soot.jimple.interproc.ifds.solver;packagesoot.jimple.interproc.ifds.solversoot.jimple.interproc.ifds;package de.bodden.ide.solver;packagede.bodden.ide.solverde.bodden.ide;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFGsoot.jimple.interproc.ifds;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFGde.bodden.ide;/**/**/**/** * A path edge as described in the IFDS/IDE algorithms. * A path edge as described in the IFDS/IDE algorithms. * A path edge as described in the IFDS/IDE algorithms. * A path edge as described in the IFDS/IDE algorithms.








src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......













src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/solver/SummaryFunctions.java

→

src/de/bodden/ide/solver/SummaryFunctions.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......













package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......










package soot.jimple.interproc.ifds.solver;





package de.bodden.ide.solver;





















import java.util.Collections;





import java.util.Collections;







import java.util.Map;





import java.util.Map;





















import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;























import com.google.common.collect.HashBasedTable;





import com.google.common.collect.HashBasedTable;







import com.google.common.collect.Table;





import com.google.common.collect.Table;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;

















/**





/**







 * A data structure to record summary functions in an indexed fashion, for fast retrieval.





 * A data structure to record summary functions in an indexed fashion, for fast retrieval.







 */





 */



......


package soot.jimple.interproc.ifds.solver;packagesoot.jimple.interproc.ifds.solversoot.jimple.interproc.ifds;package de.bodden.ide.solver;packagede.bodden.ide.solverde.bodden.ide;import java.util.Collections;importjava.util.Collections;import java.util.Collections;importjava.util.Collections;import java.util.Map;importjava.util.Map;import java.util.Map;importjava.util.Map;import soot.jimple.interproc.ifds.EdgeFunction;importsoot.jimple.interproc.ifds.EdgeFunction;import soot.jimple.interproc.ifds.SynchronizedBy;importsoot.jimple.interproc.ifds.SynchronizedBy;import soot.jimple.interproc.ifds.ThreadSafe;importsoot.jimple.interproc.ifds.ThreadSafe;import com.google.common.collect.HashBasedTable;importcom.google.common.collect.HashBasedTable;import com.google.common.collect.HashBasedTable;importcom.google.common.collect.HashBasedTable;import com.google.common.collect.Table;importcom.google.common.collect.Table;import com.google.common.collect.Table;importcom.google.common.collect.Table;import de.bodden.ide.EdgeFunction;importde.bodden.ide.EdgeFunction;import de.bodden.ide.SynchronizedBy;importde.bodden.ide.SynchronizedBy;import de.bodden.ide.ThreadSafe;importde.bodden.ide.ThreadSafe;/**/**/**/** * A data structure to record summary functions in an indexed fashion, for fast retrieval. * A data structure to record summary functions in an indexed fashion, for fast retrieval. * A data structure to record summary functions in an indexed fashion, for fast retrieval. * A data structure to record summary functions in an indexed fashion, for fast retrieval. */ */ */ */








src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......













src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/template/BackwardsInterproceduralCFG.java

→

src/de/bodden/ide/template/BackwardsInterproceduralCFG.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......













package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......










package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import soot.Body;





import soot.Body;







import soot.Unit;





import soot.Unit;



......


package soot.jimple.interproc.ifds.template;packagesoot.jimple.interproc.ifds.templatesoot.jimple.interproc.ifds;package de.bodden.ide.template;packagede.bodden.ide.templatede.bodden.ide;import soot.Body;importsoot.Body;import soot.Body;importsoot.Body;import soot.Unit;importsoot.Unit;import soot.Unit;importsoot.Unit;








src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......













src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/template/DefaultIDETabulationProblem.java

→

src/de/bodden/ide/template/DefaultIDETabulationProblem.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......













package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......










package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.EdgeFunction;









import de.bodden.ide.EdgeFunctions;









import de.bodden.ide.IDETabulationProblem;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.JoinLattice;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.EdgeFunction;









import soot.jimple.interproc.ifds.EdgeFunctions;









import soot.jimple.interproc.ifds.IDETabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.JoinLattice;























/**





/**







 * This is a template for {@link IDETabulationProblem}s that automatically caches values





 * This is a template for {@link IDETabulationProblem}s that automatically caches values



......


package soot.jimple.interproc.ifds.template;packagesoot.jimple.interproc.ifds.templatesoot.jimple.interproc.ifds;package de.bodden.ide.template;packagede.bodden.ide.templatede.bodden.ide;import de.bodden.ide.EdgeFunction;importde.bodden.ide.EdgeFunction;import de.bodden.ide.EdgeFunctions;importde.bodden.ide.EdgeFunctions;import de.bodden.ide.IDETabulationProblem;importde.bodden.ide.IDETabulationProblem;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.JoinLattice;importde.bodden.ide.JoinLattice;import soot.SootMethod;importsoot.SootMethod;import soot.SootMethod;importsoot.SootMethod;import soot.Unit;importsoot.Unit;import soot.Unit;importsoot.Unit;import soot.jimple.interproc.ifds.EdgeFunction;importsoot.jimple.interproc.ifds.EdgeFunction;import soot.jimple.interproc.ifds.EdgeFunctions;importsoot.jimple.interproc.ifds.EdgeFunctions;import soot.jimple.interproc.ifds.IDETabulationProblem;importsoot.jimple.interproc.ifds.IDETabulationProblem;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.JoinLattice;importsoot.jimple.interproc.ifds.JoinLattice;/**/**/**/** * This is a template for {@link IDETabulationProblem}s that automatically caches values * This is a template for {@link IDETabulationProblem}s that automatically caches values * This is a template for {@link IDETabulationProblem}s that automatically caches values * This is a template for {@link IDETabulationProblem}s that automatically caches values








src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......













src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/template/DefaultIFDSTabulationProblem.java

→

src/de/bodden/ide/template/DefaultIFDSTabulationProblem.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......













package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......










package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;























import de.bodden.ide.FlowFunctions;









import de.bodden.ide.IFDSTabulationProblem;









import de.bodden.ide.InterproceduralCFG;







import soot.SootMethod;





import soot.SootMethod;







import soot.Unit;





import soot.Unit;







import soot.jimple.interproc.ifds.FlowFunctions;









import soot.jimple.interproc.ifds.IFDSTabulationProblem;









import soot.jimple.interproc.ifds.InterproceduralCFG;























/**





/**







 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values





 * This is a template for {@link IFDSTabulationProblem}s that automatically caches values



......


package soot.jimple.interproc.ifds.template;packagesoot.jimple.interproc.ifds.templatesoot.jimple.interproc.ifds;package de.bodden.ide.template;packagede.bodden.ide.templatede.bodden.ide;import de.bodden.ide.FlowFunctions;importde.bodden.ide.FlowFunctions;import de.bodden.ide.IFDSTabulationProblem;importde.bodden.ide.IFDSTabulationProblem;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import soot.SootMethod;importsoot.SootMethod;import soot.SootMethod;importsoot.SootMethod;import soot.Unit;importsoot.Unit;import soot.Unit;importsoot.Unit;import soot.jimple.interproc.ifds.FlowFunctions;importsoot.jimple.interproc.ifds.FlowFunctions;import soot.jimple.interproc.ifds.IFDSTabulationProblem;importsoot.jimple.interproc.ifds.IFDSTabulationProblem;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;/**/**/**/** * This is a template for {@link IFDSTabulationProblem}s that automatically caches values * This is a template for {@link IFDSTabulationProblem}s that automatically caches values * This is a template for {@link IFDSTabulationProblem}s that automatically caches values * This is a template for {@link IFDSTabulationProblem}s that automatically caches values








src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad












package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......













src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java








View file @ 92bb16ad








src/soot/jimple/interproc/ifds/template/JimpleBasedInterproceduralCFG.java

→

src/de/bodden/ide/template/JimpleBasedInterproceduralCFG.java





soot/jimple/interproc/ifdsde/bodden/ide




View file @ 92bb16ad


92bb16ad









package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......













package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......










package soot.jimple.interproc.ifds.template;





package de.bodden.ide.template;





















import java.util.ArrayList;





import java.util.ArrayList;







import java.util.HashMap;





import java.util.HashMap;



...@@ -16,11 +16,6 @@ import soot.SootMethod;
...@@ -16,11 +16,6 @@ import soot.SootMethod;






import soot.Unit;





import soot.Unit;







import soot.UnitBox;





import soot.UnitBox;







import soot.jimple.Stmt;





import soot.jimple.Stmt;







import soot.jimple.interproc.ifds.DontSynchronize;









import soot.jimple.interproc.ifds.InterproceduralCFG;









import soot.jimple.interproc.ifds.SynchronizedBy;









import soot.jimple.interproc.ifds.ThreadSafe;









import soot.jimple.interproc.ifds.solver.IDESolver;









import soot.jimple.toolkits.callgraph.CallGraph;





import soot.jimple.toolkits.callgraph.CallGraph;







import soot.jimple.toolkits.callgraph.Edge;





import soot.jimple.toolkits.callgraph.Edge;







import soot.jimple.toolkits.callgraph.EdgePredicate;





import soot.jimple.toolkits.callgraph.EdgePredicate;



...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;
...@@ -33,6 +28,12 @@ import soot.toolkits.graph.ExceptionalUnitGraph;






import com.google.common.cache.CacheLoader;





import com.google.common.cache.CacheLoader;







import com.google.common.cache.LoadingCache;





import com.google.common.cache.LoadingCache;























import de.bodden.ide.DontSynchronize;









import de.bodden.ide.InterproceduralCFG;









import de.bodden.ide.SynchronizedBy;









import de.bodden.ide.ThreadSafe;









import de.bodden.ide.solver.IDESolver;

















/**





/**







 * Default implementation for the {@link InterproceduralCFG} interface.





 * Default implementation for the {@link InterproceduralCFG} interface.







 * Includes all statements reachable from {@link Scene#getEntryPoints()} through





 * Includes all statements reachable from {@link Scene#getEntryPoints()} through



......


package soot.jimple.interproc.ifds.template;packagesoot.jimple.interproc.ifds.templatesoot.jimple.interproc.ifds;package de.bodden.ide.template;packagede.bodden.ide.templatede.bodden.ide;import java.util.ArrayList;importjava.util.ArrayList;import java.util.ArrayList;importjava.util.ArrayList;import java.util.HashMap;importjava.util.HashMap;import java.util.HashMap;importjava.util.HashMap;import soot.Unit;importsoot.Unit;import soot.Unit;importsoot.Unit;import soot.UnitBox;importsoot.UnitBox;import soot.UnitBox;importsoot.UnitBox;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.Stmt;importsoot.jimple.Stmt;import soot.jimple.interproc.ifds.DontSynchronize;importsoot.jimple.interproc.ifds.DontSynchronize;import soot.jimple.interproc.ifds.InterproceduralCFG;importsoot.jimple.interproc.ifds.InterproceduralCFG;import soot.jimple.interproc.ifds.SynchronizedBy;importsoot.jimple.interproc.ifds.SynchronizedBy;import soot.jimple.interproc.ifds.ThreadSafe;importsoot.jimple.interproc.ifds.ThreadSafe;import soot.jimple.interproc.ifds.solver.IDESolver;importsoot.jimple.interproc.ifds.solver.IDESolver;import soot.jimple.toolkits.callgraph.CallGraph;importsoot.jimple.toolkits.callgraph.CallGraph;import soot.jimple.toolkits.callgraph.CallGraph;importsoot.jimple.toolkits.callgraph.CallGraph;import soot.jimple.toolkits.callgraph.Edge;importsoot.jimple.toolkits.callgraph.Edge;import soot.jimple.toolkits.callgraph.Edge;importsoot.jimple.toolkits.callgraph.Edge;import soot.jimple.toolkits.callgraph.EdgePredicate;importsoot.jimple.toolkits.callgraph.EdgePredicate;import soot.jimple.toolkits.callgraph.EdgePredicate;importsoot.jimple.toolkits.callgraph.EdgePredicate;import com.google.common.cache.CacheLoader;importcom.google.common.cache.CacheLoader;import com.google.common.cache.CacheLoader;importcom.google.common.cache.CacheLoader;import com.google.common.cache.LoadingCache;importcom.google.common.cache.LoadingCache;import com.google.common.cache.LoadingCache;importcom.google.common.cache.LoadingCache;import de.bodden.ide.DontSynchronize;importde.bodden.ide.DontSynchronize;import de.bodden.ide.InterproceduralCFG;importde.bodden.ide.InterproceduralCFG;import de.bodden.ide.SynchronizedBy;importde.bodden.ide.SynchronizedBy;import de.bodden.ide.ThreadSafe;importde.bodden.ide.ThreadSafe;import de.bodden.ide.solver.IDESolver;importde.bodden.ide.solver.IDESolver;/**/**/**/** * Default implementation for the {@link InterproceduralCFG} interface. * Default implementation for the {@link InterproceduralCFG} interface. * Default implementation for the {@link InterproceduralCFG} interface. * Default implementation for the {@link InterproceduralCFG} interface. * Includes all statements reachable from {@link Scene#getEntryPoints()} through * Includes all statements reachable from {@link Scene#getEntryPoints()} through * Includes all statements reachable from {@link Scene#getEntryPoints()} through * Includes all statements reachable from {@link Scene#getEntryPoints()} through



Prev


1


2


Next





Prev

1

2

Next











Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel







Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Write




Preview

























Write



Preview

















































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel












Supports Markdown






0%










Try again


or


attach a new file


.



Cancel




Supports Markdown





0%










Try again


or


attach a new file


.



Cancel






0%


0%







Try again


or


attach a new file


.




Try again

attach a new file

Cancel



You are about to add

0
people

to the discussion. Proceed with caution.



You are about to add

0
people

to the discussion. Proceed with caution.
0

Finish editing this message first!



Cancel



Finish editing this message first!

Cancel


Please register or sign in to comment






