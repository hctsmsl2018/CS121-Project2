



GitLab


















Projects
Groups
Topics
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab






Sign in




Toggle navigation

Menu








GitLab


















Projects
Groups
Topics
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab






Sign in




Toggle navigation

Menu






GitLab


















Projects
Groups
Topics
Snippets



GitLab








GitLab









Projects
Groups
Topics
Snippets






Projects
Groups
Topics
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab






Sign in




Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributor statistics


Graph


Compare revisions







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Artifacts


Schedules







Deployments




Deployments




Environments


Releases







Packages and registries




Packages and registries




Model experiments







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar












Joshua Garcia heros

Commits



















herossrcheros

















Jan 29, 2015









bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2













Jan 22, 2015









Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6













Jan 16, 2015









Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807













Jan 15, 2015









changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5













Jan 14, 2015









k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49













Jan 08, 2015









avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097
















Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75













Jan 07, 2015









"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea
















cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e













Jan 05, 2015









handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b













Dec 10, 2014









Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4













Nov 27, 2014









handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f













Nov 25, 2014









edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae













Nov 13, 2014









annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c













Oct 22, 2014









use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347













Oct 15, 2014









FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c













Sep 25, 2014









Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b













Aug 08, 2014









opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc













Jun 25, 2014









Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde
















Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817
















Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d
















Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda
















Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868
















store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710
















Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e













Jun 09, 2014









Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89













Apr 23, 2014









now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1













Apr 02, 2014









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977













Mar 03, 2014









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1













Feb 28, 2014









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10













Jan 17, 2014









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f
















caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d













Jan 15, 2014









generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4













Dec 24, 2013









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a
















made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc
















added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928













Dec 15, 2013









cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7













Nov 28, 2013









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f













Oct 31, 2013









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595
















added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066






















H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributor statistics


Graph


Compare revisions







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Artifacts


Schedules







Deployments




Deployments




Environments


Releases







Packages and registries




Packages and registries




Model experiments







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributor statistics


Graph


Compare revisions






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributor statistics


Contributor statistics

Graph


Graph

Compare revisions


Compare revisions




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Artifacts


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Artifacts


Artifacts

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Packages and registries




Packages and registries




Model experiments






Packages and registries


Packages and registries




Packages and registries


Model experiments


Model experiments




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar








Joshua Garcia heros

Commits



















herossrcheros

















Jan 29, 2015









bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2













Jan 22, 2015









Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6













Jan 16, 2015









Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807













Jan 15, 2015









changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5













Jan 14, 2015









k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49













Jan 08, 2015









avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097
















Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75













Jan 07, 2015









"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea
















cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e













Jan 05, 2015









handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b













Dec 10, 2014









Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4













Nov 27, 2014









handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f













Nov 25, 2014









edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae













Nov 13, 2014









annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c













Oct 22, 2014









use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347













Oct 15, 2014









FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c













Sep 25, 2014









Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b













Aug 08, 2014









opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc













Jun 25, 2014









Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde
















Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817
















Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d
















Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda
















Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868
















store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710
















Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e













Jun 09, 2014









Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89













Apr 23, 2014









now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1













Apr 02, 2014









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977













Mar 03, 2014









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1













Feb 28, 2014









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10













Jan 17, 2014









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f
















caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d













Jan 15, 2014









generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4













Dec 24, 2013









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a
















made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc
















added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928













Dec 15, 2013









cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7













Nov 28, 2013









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f













Oct 31, 2013









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595
















added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066

























Joshua Garcia heros

Commits












Joshua Garcia heros

Commits










Joshua Garcia heros

Commits




Joshua Garciaherosheros
Commits












herossrcheros

















Jan 29, 2015









bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2













Jan 22, 2015









Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6













Jan 16, 2015









Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807













Jan 15, 2015









changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5













Jan 14, 2015









k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49













Jan 08, 2015









avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097
















Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75













Jan 07, 2015









"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea
















cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e













Jan 05, 2015









handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b













Dec 10, 2014









Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4













Nov 27, 2014









handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f













Nov 25, 2014









edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae













Nov 13, 2014









annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c













Oct 22, 2014









use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347













Oct 15, 2014









FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c













Sep 25, 2014









Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b













Aug 08, 2014









opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc













Jun 25, 2014









Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde
















Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817
















Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d
















Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda
















Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868
















store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710
















Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e













Jun 09, 2014









Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89













Apr 23, 2014









now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1













Apr 02, 2014









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977













Mar 03, 2014









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1













Feb 28, 2014









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10













Jan 17, 2014









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f
















caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d













Jan 15, 2014









generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4













Dec 24, 2013









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a
















made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc
















added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928













Dec 15, 2013









cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7













Nov 28, 2013









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f













Oct 31, 2013









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595
















added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066


























herossrcheros

















Jan 29, 2015









bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2













Jan 22, 2015









Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6













Jan 16, 2015









Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807













Jan 15, 2015









changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5













Jan 14, 2015









k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49













Jan 08, 2015









avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097
















Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75













Jan 07, 2015









"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea
















cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e













Jan 05, 2015









handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b













Dec 10, 2014









Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4













Nov 27, 2014









handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f













Nov 25, 2014









edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae













Nov 13, 2014









annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c













Oct 22, 2014









use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347













Oct 15, 2014









FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c













Sep 25, 2014









Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b













Aug 08, 2014









opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc













Jun 25, 2014









Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde
















Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817
















Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d
















Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda
















Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868
















store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710
















Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e













Jun 09, 2014









Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89













Apr 23, 2014









now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1













Apr 02, 2014









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977













Mar 03, 2014









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1













Feb 28, 2014









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10













Jan 17, 2014









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f
















caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d













Jan 15, 2014









generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4













Dec 24, 2013









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a
















made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc
















added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928













Dec 15, 2013









cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7













Nov 28, 2013









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f













Oct 31, 2013









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595
















added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066






















herossrcheros



















herossrcheros

















herossrcheros



herossrcheros















Jan 29, 2015









bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2













Jan 22, 2015









Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6













Jan 16, 2015









Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807













Jan 15, 2015









changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5













Jan 14, 2015









k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49













Jan 08, 2015









avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097
















Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75













Jan 07, 2015









"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea
















cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e













Jan 05, 2015









handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b













Dec 10, 2014









Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4













Nov 27, 2014









handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f













Nov 25, 2014









edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae













Nov 13, 2014









annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c













Oct 22, 2014









use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347













Oct 15, 2014









FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c













Sep 25, 2014









Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b













Aug 08, 2014









opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc













Jun 25, 2014









Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde
















Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817
















Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d
















Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda
















Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868
















store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710
















Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e













Jun 09, 2014









Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89













Apr 23, 2014









now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1













Apr 02, 2014









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977













Mar 03, 2014









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1













Feb 28, 2014









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10













Jan 17, 2014









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f
















caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d













Jan 15, 2014









generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4













Dec 24, 2013









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a
















made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc
















added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928













Dec 15, 2013









cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7













Nov 28, 2013









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f













Oct 31, 2013









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595
















added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066














Jan 29, 2015
Jan 29, 2015







bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2

















bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2













bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015






1021f5a2









bug fix in unbalanced return handling

·
1021f5a2


Johannes Lerch authored Jan 28, 2015


·
1021f5a2

Johannes Lerch authored Jan 28, 2015




1021f5a2









1021f5a2







1021f5a2



Jan 22, 2015
Jan 22, 2015







Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6

















Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6













Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015






edf48ee6









Split prefix check into potential and guaranteed prefix

·
edf48ee6


Johannes Lerch authored Jan 22, 2015


·
edf48ee6

Johannes Lerch authored Jan 22, 2015




edf48ee6









edf48ee6







edf48ee6



Jan 16, 2015
Jan 16, 2015







Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807

















Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807













Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015






e464b807









Do not check interest of callers if paused edge already available.

·
e464b807


Johannes Lerch authored Jan 16, 2015


·
e464b807

Johannes Lerch authored Jan 16, 2015




e464b807









e464b807







e464b807



Jan 15, 2015
Jan 15, 2015







changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5

















changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5













changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015






6ebef3f5









changed to single threaded; bugfix

·
6ebef3f5


Johannes Lerch authored Jan 15, 2015


·
6ebef3f5

Johannes Lerch authored Jan 15, 2015




6ebef3f5









6ebef3f5







6ebef3f5



Jan 14, 2015
Jan 14, 2015







k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49

















k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49













k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015






f08a8e49









k-limitting; fix in constraint propagation

·
f08a8e49


Johannes Lerch authored Jan 14, 2015


·
f08a8e49

Johannes Lerch authored Jan 14, 2015




f08a8e49









f08a8e49







f08a8e49



Jan 08, 2015
Jan 08, 2015







avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097
















Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75

















avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097













avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015






f227e097









avoiding unnecessary calls to clone a fact

·
f227e097


Johannes Lerch authored Jan 08, 2015


·
f227e097

Johannes Lerch authored Jan 08, 2015




f227e097









f227e097







f227e097








Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75













Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015






b131fd75









Bugfix, Helper functions, and renaming

·
b131fd75


Johannes Lerch authored Jan 08, 2015


·
b131fd75

Johannes Lerch authored Jan 08, 2015




b131fd75









b131fd75







b131fd75



Jan 07, 2015
Jan 07, 2015







"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea
















cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e

















"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea













"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges





05779cea









"interest/concrretization" edges in callers are no longer propagated as

·
05779cea




Johannes Lerch authored Jan 07, 2015

normal path edges, but immediately registered as jump functions to avoid
duplications and avoidable merges

·
05779cea

Johannes Lerch authored Jan 07, 2015




05779cea









05779cea







05779cea








cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e













cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015






1cd34e9e









cleaning code

·
1cd34e9e


Johannes Lerch authored Jan 07, 2015


·
1cd34e9e

Johannes Lerch authored Jan 07, 2015




1cd34e9e









1cd34e9e







1cd34e9e



Jan 05, 2015
Jan 05, 2015







handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b

















handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b













handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015






ec76098b









handling for writing fields / excluding access paths

·
ec76098b


Johannes Lerch authored Jan 05, 2015


·
ec76098b

Johannes Lerch authored Jan 05, 2015




ec76098b









ec76098b







ec76098b



Dec 10, 2014
Dec 10, 2014







Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4

















Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4













Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014






7527a0d4









Bug/test fixes

·
7527a0d4


Johannes Lerch authored Dec 10, 2014


·
7527a0d4

Johannes Lerch authored Dec 10, 2014




7527a0d4









7527a0d4







7527a0d4



Nov 27, 2014
Nov 27, 2014







handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f

















handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f













handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014






8d40408f









handling the case that incoming edge is prefix of existing summary

·
8d40408f


Johannes Lerch authored Nov 27, 2014


·
8d40408f

Johannes Lerch authored Nov 27, 2014




8d40408f









8d40408f







8d40408f



Nov 25, 2014
Nov 25, 2014







edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae

















edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae













edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014






dea31cae









edges on hold + resume

·
dea31cae


Johannes Lerch authored Nov 25, 2014


·
dea31cae

Johannes Lerch authored Nov 25, 2014




dea31cae









dea31cae







dea31cae



Nov 13, 2014
Nov 13, 2014







annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c

















annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c













annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014






9176fc7c









annotated facts (WIP)

·
9176fc7c


Johannes Lerch authored Nov 13, 2014


·
9176fc7c

Johannes Lerch authored Nov 13, 2014




9176fc7c









9176fc7c







9176fc7c



Oct 22, 2014
Oct 22, 2014







use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347

















use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347













use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014






3b064347









use of abstracted summaries

·
3b064347


Johannes Lerch authored Oct 22, 2014


·
3b064347

Johannes Lerch authored Oct 22, 2014




3b064347









3b064347







3b064347



Oct 15, 2014
Oct 15, 2014







FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c

















FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c













FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014






f5ac702c









FieldSensitiveIFDSSolver - concept outline

·
f5ac702c


Johannes Späth authored Oct 15, 2014


·
f5ac702c

Johannes Späth authored Oct 15, 2014




f5ac702c









f5ac702c







f5ac702c



Sep 25, 2014
Sep 25, 2014







Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b

















Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b













Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014






ddde660b









Introducing more abstract/flexible version of PathTrackingIFDSSolver

·
ddde660b


Johannes Lerch authored Sep 26, 2014


·
ddde660b

Johannes Lerch authored Sep 26, 2014




ddde660b









ddde660b







ddde660b



Aug 08, 2014
Aug 08, 2014







opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc

















opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc













opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014






6a296cfc









opened up interface

·
6a296cfc


Eric Bodden authored Aug 08, 2014


·
6a296cfc

Eric Bodden authored Aug 08, 2014




6a296cfc









6a296cfc







6a296cfc



Jun 25, 2014
Jun 25, 2014







Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde
















Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817
















Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d
















Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda
















Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868
















store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710
















Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e

















Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde













Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.





dd4a3cde









Using LeakKey to identify leaks not only on the basis of equal source

·
dd4a3cde




Johannes Lerch authored Jun 25, 2014

statements, but also equal call sites to which the flow leaks.

·
dd4a3cde

Johannes Lerch authored Jun 25, 2014




dd4a3cde









dd4a3cde







dd4a3cde








Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817













Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.





6fd38817









Introducing wrapper method propagateUnbalancedReturnFlow, which by

·
6fd38817




Johannes Lerch authored Jun 25, 2014

default forwards to propagate, but is overridden in BiDi to enable
pausing edges at the correct time.

·
6fd38817

Johannes Lerch authored Jun 25, 2014




6fd38817









6fd38817







6fd38817








Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d













Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014






663aa65d









Removed unnecessary call to decrement before reset.

·
663aa65d


Johannes Lerch authored Jun 25, 2014


·
663aa65d

Johannes Lerch authored Jun 25, 2014




663aa65d









663aa65d







663aa65d








Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda













Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.





d7737fda









Not removing keys of paused edges as it is not guaranteed that in the

·
d7737fda




Johannes Lerch authored Jun 25, 2014

meantime no other thread has added new entries to the set stored as
value of the map.

·
d7737fda

Johannes Lerch authored Jun 25, 2014




d7737fda









d7737fda







d7737fda








Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868













Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014






6016a868









Fixed some concurrency issues in the BiDiIFDSSolver and IDESolver

·
6016a868


Johannes Lerch authored Jun 18, 2014


·
6016a868

Johannes Lerch authored Jun 18, 2014




6016a868









6016a868







6016a868








store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710













store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building





26b9e710









store calling context in abstraction to enable context sensitive path

·
26b9e710




Johannes Lerch authored Jun 13, 2014

building

·
26b9e710

Johannes Lerch authored Jun 13, 2014




26b9e710









26b9e710







26b9e710








Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e













Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.





cbce681e









Change to IDESolver to behave consistent in cases in which summaries can

·
cbce681e




Johannes Lerch authored Jun 11, 2014

be applied inside processCall and cases in which they are applied in
processExit, i.e., in the latter computeReturnFlowFunction was called
only once for multiple source values on the caller side.

·
cbce681e

Johannes Lerch authored Jun 11, 2014




cbce681e









cbce681e







cbce681e



Jun 09, 2014
Jun 09, 2014







Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89

















Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89













Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014






c16c1f89









Add nullness check of CacheBuilder

·
c16c1f89


sleepingpig authored Jun 09, 2014


·
c16c1f89

sleepingpig authored Jun 09, 2014




c16c1f89









c16c1f89







c16c1f89



Apr 23, 2014
Apr 23, 2014







now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1

















now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1













now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014






f3b1b1f1









now caching the hash code of the Pair class

·
f3b1b1f1


Steven Arzt authored Apr 23, 2014


·
f3b1b1f1

Steven Arzt authored Apr 23, 2014




f3b1b1f1









f3b1b1f1







f3b1b1f1



Apr 02, 2014
Apr 02, 2014







generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977

















generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977













generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014


·
3d7cf977

Steven Arzt authored Apr 02, 2014




3d7cf977









3d7cf977







3d7cf977



Mar 03, 2014
Mar 03, 2014







Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1

















Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1













Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014


·
81655ff1

Johannes Lerch authored Mar 03, 2014




81655ff1









81655ff1







81655ff1



Feb 28, 2014
Feb 28, 2014







Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10

















Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10













Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10




Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.

·
2c10ea10

Johannes Lerch authored Feb 28, 2014




2c10ea10









2c10ea10







2c10ea10



Jan 17, 2014
Jan 17, 2014







generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f
















caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d

















generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014


·
4b76e92f

Steven Arzt authored Jan 17, 2014




4b76e92f









4b76e92f







4b76e92f








caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d









caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014


·
3b6c322d

Steven Arzt authored Jan 17, 2014




3b6c322d









3b6c322d







3b6c322d



Jan 15, 2014
Jan 15, 2014







generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4

















generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4









generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014


·
0b0c5ba4

Steven Arzt authored Jan 15, 2014




0b0c5ba4









0b0c5ba4







0b0c5ba4



Dec 24, 2013
Dec 24, 2013







cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a
















made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc
















added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928

















cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013


·
f21c884a

Eric Bodden authored Dec 24, 2013




f21c884a









f21c884a







f21c884a








made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc









made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013


·
802bc2dc

Eric Bodden authored Dec 24, 2013




802bc2dc









802bc2dc







802bc2dc








added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928









added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928




Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet

·
c52d9928

Eric Bodden authored Dec 24, 2013




c52d9928









c52d9928







c52d9928



Dec 15, 2013
Dec 15, 2013







cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7

















cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7









cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013


·
a278d4f7

Eric Bodden authored Dec 15, 2013




a278d4f7









a278d4f7







a278d4f7



Nov 28, 2013
Nov 28, 2013







pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f

















pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f













pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013


·
3980d99f

Steven Arzt authored Nov 28, 2013




3980d99f









3980d99f







3980d99f



Oct 31, 2013
Oct 31, 2013







made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595
















added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066

















made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013


·
4d3ab595

Steven Arzt authored Oct 31, 2013




4d3ab595









4d3ab595







4d3ab595








added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066









added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013


·
fdced066

Steven Arzt authored Oct 31, 2013




fdced066









fdced066







fdced066








