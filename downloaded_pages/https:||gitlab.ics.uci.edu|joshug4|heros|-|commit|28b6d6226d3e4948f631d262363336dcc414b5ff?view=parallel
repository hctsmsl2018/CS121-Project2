



GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab


















Projects
Groups
Snippets



GitLab






GitLab









Projects
Groups
Snippets






Projects
Groups
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Joshua Garcia heros
Commits

28b6d622















Commit
28b6d622


authored
Nov 29, 2012
by


Eric Bodden



Browse files




.







parent
40af5b40













Changes
1




Hide whitespace changes

Inline
Side-by-side















README.md








View file @ 28b6d622












Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file

















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Joshua Garcia heros
Commits

28b6d622















Commit
28b6d622


authored
Nov 29, 2012
by


Eric Bodden



Browse files




.







parent
40af5b40













Changes
1




Hide whitespace changes

Inline
Side-by-side















README.md








View file @ 28b6d622












Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file

















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Open sidebar



Joshua Garcia heros
Commits

28b6d622







Open sidebar



Joshua Garcia heros
Commits

28b6d622




Open sidebar

Joshua Garcia heros
Commits

28b6d622


Joshua GarciaherosherosCommits
28b6d622








Commit
28b6d622


authored
Nov 29, 2012
by


Eric Bodden



Browse files




.







parent
40af5b40













Changes
1




Hide whitespace changes

Inline
Side-by-side















README.md








View file @ 28b6d622












Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file

















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










Commit
28b6d622


authored
Nov 29, 2012
by


Eric Bodden



Browse files




.







parent
40af5b40













Changes
1




Hide whitespace changes

Inline
Side-by-side















README.md








View file @ 28b6d622












Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file

















Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment






Commit
28b6d622


authored
Nov 29, 2012
by


Eric Bodden



Browse files



Commit
28b6d622


authored
Nov 29, 2012
by


Eric Bodden

28b6d622authoredbyEric Bodden

.






parent
40af5b40
















parent
40af5b40





parent












Changes
1
1


Hide whitespace changes

Inline
Side-by-side






Hide whitespace changes

Inline
Side-by-side




Hide whitespace changes

Inline
Side-by-side


Inline
Side-by-side










README.md








View file @ 28b6d622












Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file















README.md








View file @ 28b6d622












Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file













README.md








View file @ 28b6d622








README.md










View file @ 28b6d622


28b6d622









Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file













Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file










Heros IFDS/IDE Solver





Heros IFDS/IDE Solver







=====================





=====================







Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.





Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.





















Heros...





Heros...







* supports solving both IFDS and IDE problems,





* supports solving both IFDS and IDE problems,



...@@ -10,7 +10,7 @@ Heros...
...@@ -10,7 +10,7 @@ Heros...




















Who are the developers of Heros?





Who are the developers of Heros?







--------------------------------





--------------------------------







Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).





Heros was developed and is maintained by [Eric Bodden][2].





















Why is Heros called Heros?





Why is Heros called Heros?







--------------------------





--------------------------



...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names
...@@ -18,12 +18,12 @@ The name contains (in a different order) the first characters of the last names




















What is IFDS/IDE in the first place?





What is IFDS/IDE in the first place?







------------------------------------





------------------------------------







[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.





[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.







[IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.





















What are the unique features of Heros over other IFDS/IDE solvers?





What are the unique features of Heros over other IFDS/IDE solvers?







------------------------------------------------------------------





------------------------------------------------------------------







To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.





















Why did you create Heros?





Why did you create Heros?







-------------------------





-------------------------



...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.
...@@ -42,4 +42,12 @@ The solver in heros is fully generic. It can be combined with any form of ICFG.




















Under what License can I use Heros?





Under what License can I use Heros?







-----------------------------------





-----------------------------------







Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.




Heros is released under LGPL - see [LICENSE.txt][7] for details.




\ No newline at end of file














[1]: http://www.sable.mcgill.ca/soot/









[2]: http://bodden.de/









[3]: http://dx.doi.org/10.1145/199448.199462









[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2









[5]: http://wala.sf.net/









[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8









[7]: heros/blob/master/LICENSE.txt





\ No newline at end of file


Heros IFDS/IDE SolverHeros IFDS/IDE SolverHeros IFDS/IDE SolverHeros IFDS/IDE Solver====================================================================================Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot](http://www.sable.mcgill.ca/soot/) framework.[Soot]((http://www.sable.mcgill.ca/soot/http://www.sable.mcgill.ca/soot/))Heros is a generic implementation of an IFDS/IDE Solver that can be plugged into existing, Java-based program analysis frameworks. A reference connector exists for the [Soot][1] framework.[Soot][[11]]Heros...Heros...* supports solving both IFDS and IDE problems,** supports solving both IFDS and IDE problems,*Who are the developers of Heros?Who are the developers of Heros?Who are the developers of Heros?Who are the developers of Heros?--------------------------------------------------------------------------------------------------------------------------------Heros was developed and is maintained by [Eric Bodden](http://bodden.de/).[Eric Bodden]((http://bodden.de/http://bodden.de/))Heros was developed and is maintained by [Eric Bodden][2].[Eric Bodden][[22]]Why is Heros called Heros?Why is Heros called Heros?Why is Heros called Heros?Why is Heros called Heros?--------------------------------------------------------------------------------------------------------What is IFDS/IDE in the first place?What is IFDS/IDE in the first place?What is IFDS/IDE in the first place?What is IFDS/IDE in the first place?------------------------------------------------------------------------------------------------------------------------------------------------[IFDS](http://dx.doi.org/10.1145/199448.199462) is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.[IFDS]((http://dx.doi.org/10.1145/199448.199462http://dx.doi.org/10.1145/199448.199462))[IFDS][3] is a general framework for solving inter-procedural, finite, distributive subset problems in a flow-sensitive, fully context-sensitive manner. From a user's perspective, IFDS allows static program analysis in a template-driven manner. Users simply define flow functions for an analysis problem but don't need to worry about solving the analysis problem. The latter is automatically taken care of by the solver, in this case by Heros.[IFDS][[33]][IDE]("http://dx.doi.org/10.1016/0304-3975(96)00072-2") is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.[IDE](("http://dx.doi.org/10.1016/0304-3975(96"http://dx.doi.org/10.1016/0304-3975(96))00072-2")[IDE][4] is an extension of IFDS that allows more expressive computations. Heros implements an IDE solver and supports IFDS problems as special cases of IDE.[IDE][[44]]What are the unique features of Heros over other IFDS/IDE solvers?What are the unique features of Heros over other IFDS/IDE solvers?What are the unique features of Heros over other IFDS/IDE solvers?What are the unique features of Heros over other IFDS/IDE solvers?------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala](http://wala.sf.net/) implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez](http://dx.doi.org/10.1007/978-3-642-11970-5_8). This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.[Wala]((http://wala.sf.net/http://wala.sf.net/))[Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez]((http://dx.doi.org/10.1007/978-3-642-11970-5_8http://dx.doi.org/10.1007/978-3-642-11970-5_8))To the best of our knowledge there exist at least two other similar solvers implemented in Java. [Wala][5] implements a solver that supports IFDS but not IDE. The solver is highly scalable but in our eyes requires more verbose definitions of client analyses. Heros is fully multi-threaded, while Wala's solver is not. There also exists a Scala-based solver by [Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][6]. This implementation does support IDE, and there exists a multi-threaded version of it, but as of yet the implementation is not publicly available.[Wala][[55]][Nomair A. Naeem, Ondrej Lhotak, and Jonathan Rodriguez][[66]]Why did you create Heros?Why did you create Heros?Why did you create Heros?Why did you create Heros?----------------------------------------------------------------------------------------------------Under what License can I use Heros?Under what License can I use Heros?Under what License can I use Heros?Under what License can I use Heros?--------------------------------------------------------------------------------------------------------------------------------------------Heros is released under LGPL - see [LICENSE.txt](heros/blob/master/LICENSE.txt) for details.[LICENSE.txt](heros/blob/master/LICENSE.txt)Heros is released under LGPL - see [LICENSE.txt][7] for details.[LICENSE.txt][7][1]: http://www.sable.mcgill.ca/soot/[1]:http://www.sable.mcgill.ca/soot/[2]: http://bodden.de/[2]:http://bodden.de/[3]: http://dx.doi.org/10.1145/199448.199462[3]:http://dx.doi.org/10.1145/199448.199462[4]: http://dx.doi.org/10.1016/0304-3975(96)00072-2[4]:http://dx.doi.org/10.1016/0304-3975(96)00072-2[5]: http://wala.sf.net/[5]:http://wala.sf.net/[6]: http://dx.doi.org/10.1007/978-3-642-11970-5_8[6]:http://dx.doi.org/10.1007/978-3-642-11970-5_8[7]: heros/blob/master/LICENSE.txt[7]:heros/blob/master/LICENSE.txt









Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel







Write




Preview


































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Write




Preview

























Write



Preview

















































Supports Markdown






0%










Try again


or


attach a new file


.



Cancel












Supports Markdown






0%










Try again


or


attach a new file


.



Cancel




Supports Markdown





0%










Try again


or


attach a new file


.



Cancel






0%


0%







Try again


or


attach a new file


.




Try again

attach a new file

Cancel



You are about to add

0
people

to the discussion. Proceed with caution.



You are about to add

0
people

to the discussion. Proceed with caution.
0

Finish editing this message first!



Cancel



Finish editing this message first!

Cancel


Please register or sign in to comment






