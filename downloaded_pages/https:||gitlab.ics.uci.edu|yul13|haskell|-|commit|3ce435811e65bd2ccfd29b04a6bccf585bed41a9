



GitLab












Menu




Projects
Groups
Snippets


















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab












Menu




Projects
Groups
Snippets


















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab












Menu




Projects
Groups
Snippets



GitLab






GitLab




Menu




Projects
Groups
Snippets




Menu


Projects
Groups
Snippets















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in
















/














/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help



Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab




Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


haskell






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Yu Liu haskell
Commits

3ce43581















Commit
3ce43581


authored
Jul 03, 2013
by


darlliu



Browse files




stm test stub







parent
8efaa258













Changes
1




Hide whitespace changes

Inline
Side-by-side















stm/test.hs



0 → 100644







View file @ 3ce43581













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn
















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










H


haskell






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


haskell


H
H
haskell




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Yu Liu haskell
Commits

3ce43581















Commit
3ce43581


authored
Jul 03, 2013
by


darlliu



Browse files




stm test stub







parent
8efaa258













Changes
1




Hide whitespace changes

Inline
Side-by-side















stm/test.hs



0 → 100644







View file @ 3ce43581













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn
















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Open sidebar



Yu Liu haskell
Commits

3ce43581







Open sidebar



Yu Liu haskell
Commits

3ce43581




Open sidebar

Yu Liu haskell
Commits

3ce43581


Yu LiuhaskellhaskellCommits
3ce43581








Commit
3ce43581


authored
Jul 03, 2013
by


darlliu



Browse files




stm test stub







parent
8efaa258













Changes
1




Hide whitespace changes

Inline
Side-by-side















stm/test.hs



0 → 100644







View file @ 3ce43581













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn
















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










Commit
3ce43581


authored
Jul 03, 2013
by


darlliu



Browse files




stm test stub







parent
8efaa258













Changes
1




Hide whitespace changes

Inline
Side-by-side















stm/test.hs



0 → 100644







View file @ 3ce43581













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn
















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment






Commit
3ce43581


authored
Jul 03, 2013
by


darlliu



Browse files



Commit
3ce43581


authored
Jul 03, 2013
by


darlliu

3ce43581authoredbydarlliu

stm test stub






parent
8efaa258
















parent
8efaa258





parent












Changes
1
1


Hide whitespace changes

Inline
Side-by-side






Hide whitespace changes

Inline
Side-by-side




Hide whitespace changes

Inline
Side-by-side


Inline
Side-by-side










stm/test.hs



0 → 100644







View file @ 3ce43581













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn














stm/test.hs



0 → 100644







View file @ 3ce43581













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn












stm/test.hs



0 → 100644







View file @ 3ce43581








stm/test.hs



0 → 100644









View file @ 3ce43581


3ce43581










import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn













import Control.Monad










import Control.Concurrent










import Control.Concurrent.STM





















arrayRed::Int-> Int -> STM ()










arrayRed t th = do










 --allocate t arrays










 ; arr <- atomically $ newTVar (take t [1 ..])










 --parallel divide of 1 over










 ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr)










 milliSleep 800










 ; after <- atomically . readTVar arr










 --reduction(atomic)










 where timesDo = replicateM_










 milliSleep = theadDelay . (*) 1000










appV fn x = atomically $ readTVar x >>= writeTVar x . fn


import Control.MonadimportControl.Monadimport Control.ConcurrentimportControl.Concurrentimport Control.Concurrent.STMimportControl.Concurrent.STMarrayRed::Int-> Int -> STM ()arrayRed::Int->Int->STM()arrayRed t th = doarrayRedtth=do --allocate t arrays--allocate t arrays ; arr <- atomically $ newTVar (take t [1 ..]);arr<-atomically$newTVar(taket[1..]) --parallel divide of 1 over--parallel divide of 1 over ; forkIO $ th `timesDo` (appV (\x-> 1/x ) arr);forkIO$th`timesDo`(appV(\x->1/x)arr) milliSleep 800milliSleep800 ; after <- atomically . readTVar arr;after<-atomically.readTVararr --reduction(atomic)--reduction(atomic) where timesDo = replicateM_wheretimesDo=replicateM_ milliSleep = theadDelay . (*) 1000milliSleep=theadDelay.(*)1000appV fn x = atomically $ readTVar x >>= writeTVar x . fnappVfnx=atomically$readTVarx>>=writeTVarx.fn









Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel







Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Write




Preview






















Write



Preview











































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel












Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel




Supports Markdown





0%










Try again


or


attach a new file


.




Attach a file




Cancel






0%


0%







Try again


or


attach a new file


.




Try again

attach a new file

Attach a file

Cancel



You are about to add

0
people

to the discussion. Proceed with caution.



You are about to add

0
people

to the discussion. Proceed with caution.
0

Finish editing this message first!



Cancel



Finish editing this message first!

Cancel


Please register or sign in to comment






