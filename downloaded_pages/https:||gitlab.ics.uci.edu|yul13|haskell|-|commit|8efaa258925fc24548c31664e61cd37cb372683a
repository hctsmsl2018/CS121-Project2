



GitLab












Menu




Projects
Groups
Snippets


















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab












Menu




Projects
Groups
Snippets


















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab












Menu




Projects
Groups
Snippets



GitLab






GitLab




Menu




Projects
Groups
Snippets




Menu


Projects
Groups
Snippets















/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in
















/














/








Help







Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help



Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab




Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


haskell






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Yu Liu haskell
Commits

8efaa258















Commit
8efaa258


authored
Jun 27, 2013
by


darlliu



Browse files




reorganized







parent
76444193













Changes
4




Expand all
Hide whitespace changes

Inline
Side-by-side















cybert/Cybert.hs








View file @ 8efaa258






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......














cybert/cd271ex





View file @ 8efaa258





No preview for this file type













cybert/cd271ex.hs








View file @ 8efaa258






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"














cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258





This diff is collapsed.
Click to expand it.















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










H


haskell






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


haskell


H
H
haskell




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Yu Liu haskell
Commits

8efaa258















Commit
8efaa258


authored
Jun 27, 2013
by


darlliu



Browse files




reorganized







parent
76444193













Changes
4




Expand all
Hide whitespace changes

Inline
Side-by-side















cybert/Cybert.hs








View file @ 8efaa258






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......














cybert/cd271ex





View file @ 8efaa258





No preview for this file type













cybert/cd271ex.hs








View file @ 8efaa258






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"














cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258





This diff is collapsed.
Click to expand it.















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Open sidebar



Yu Liu haskell
Commits

8efaa258







Open sidebar



Yu Liu haskell
Commits

8efaa258




Open sidebar

Yu Liu haskell
Commits

8efaa258


Yu LiuhaskellhaskellCommits
8efaa258








Commit
8efaa258


authored
Jun 27, 2013
by


darlliu



Browse files




reorganized







parent
76444193













Changes
4




Expand all
Hide whitespace changes

Inline
Side-by-side















cybert/Cybert.hs








View file @ 8efaa258






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......














cybert/cd271ex





View file @ 8efaa258





No preview for this file type













cybert/cd271ex.hs








View file @ 8efaa258






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"














cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258





This diff is collapsed.
Click to expand it.















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment










Commit
8efaa258


authored
Jun 27, 2013
by


darlliu



Browse files




reorganized







parent
76444193













Changes
4




Expand all
Hide whitespace changes

Inline
Side-by-side















cybert/Cybert.hs








View file @ 8efaa258






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......














cybert/cd271ex





View file @ 8efaa258





No preview for this file type













cybert/cd271ex.hs








View file @ 8efaa258






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"














cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258





This diff is collapsed.
Click to expand it.















Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment






Commit
8efaa258


authored
Jun 27, 2013
by


darlliu



Browse files



Commit
8efaa258


authored
Jun 27, 2013
by


darlliu

8efaa258authoredbydarlliu

reorganized






parent
76444193
















parent
76444193





parent












Changes
4
4


Expand all
Hide whitespace changes

Inline
Side-by-side






Expand all
Hide whitespace changes

Inline
Side-by-side




Expand all
Hide whitespace changes

Inline
Side-by-side


Inline
Side-by-side










cybert/Cybert.hs








View file @ 8efaa258






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......














cybert/cd271ex





View file @ 8efaa258





No preview for this file type













cybert/cd271ex.hs








View file @ 8efaa258






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"














cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258





This diff is collapsed.
Click to expand it.













cybert/Cybert.hs








View file @ 8efaa258






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......












cybert/Cybert.hs








View file @ 8efaa258








cybert/Cybert.hs










View file @ 8efaa258


8efaa258



......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......






......@@ -122,11 +122,13 @@ entriesBySecondaryRef :: String -> String -> [Cybert_entry] -> [Cybert_entry]









entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xs










--lookup










entriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]










--shows fold CHANGE, i.e. the change in fold from the larger to the smaller










entriesByFold threshold xs = filter (\x ->pred $ mean x) xs where










 pred (Left a) = False










 pred (Right b)= if length b < 2 then False










 else b!!1-b!!0 > threshold





















 else let larger = foldl1 max b










 smaller = foldl1 min b










 in larger - smaller > threshold










entriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]










entriesByPval threshold xs = filter (\x -> pval x < threshold) xs














......


entriesBySecondaryRef tref ref xs = filter (\x -> (secondaryRefs x) M.! tref == ref) xsentriesBySecondaryReftrefrefxs=filter(\x->(secondaryRefsx)M.!tref==ref)xs--lookup--lookupentriesByFold :: Float -> [Cybert_entry] -> [Cybert_entry]entriesByFold::Float->[Cybert_entry]->[Cybert_entry]--shows fold CHANGE, i.e. the change in fold from the larger to the smaller--shows fold CHANGE, i.e. the change in fold from the larger to the smallerentriesByFold threshold xs = filter (\x ->pred $ mean x) xs whereentriesByFoldthresholdxs=filter(\x->pred$meanx)xswhere pred (Left a) = Falsepred(Lefta)=False pred (Right b)= if length b < 2 then Falsepred(Rightb)=iflengthb<2thenFalse else b!!1-b!!0 > thresholdelseb!!1-b!!0>threshold else let larger = foldl1 max belseletlarger=foldl1maxb smaller = foldl1 min bsmaller=foldl1minb in larger - smaller > thresholdinlarger-smaller>thresholdentriesByPval :: Float -> [Cybert_entry] -> [Cybert_entry]entriesByPval::Float->[Cybert_entry]->[Cybert_entry]entriesByPval threshold xs = filter (\x -> pval x < threshold) xsentriesByPvalthresholdxs=filter(\x->pvalx<threshold)xs








cybert/cd271ex





View file @ 8efaa258





No preview for this file type











cybert/cd271ex





View file @ 8efaa258








cybert/cd271ex







View file @ 8efaa258
8efaa258


No preview for this file type




No preview for this file type


No preview for this file type









cybert/cd271ex.hs








View file @ 8efaa258






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"












cybert/cd271ex.hs








View file @ 8efaa258








cybert/cd271ex.hs










View file @ 8efaa258


8efaa258



......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"






......@@ -13,20 +13,32 @@ countln = foldr (\z acc -> acc + (length z)) 0









 -- count cross lists num










loadCybert' = loadCybert cybert_header










main = do










 all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"










 let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)










 all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)










 ; exportCybert all_up "all_up_refs.txt"










 ; exportCybert all_down "all_down_refs.txt"










 ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]










 ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]










 let ones = map extract (all_combined:onesM)










 pairs = map extract (all_combined:pairsM)










 let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)










 down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)










 five_up = map (filter (\x -> countln (pfind x up) >= 5 )) up










 five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down










 five_ups = foldl union empty (map cybertToSet five_up)










 five_downs = foldl union empty (map cybertToSet five_down)










 ; exportCybert (toList five_ups) "five_up_refs.txt" 










 ; exportCybert (toList five_downs) "five_down_refs.txt" 









 {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}










 {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}










 {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}










 {-; exportCybert all_up "all_up_refs.txt"-}










 {-; exportCybert all_down "all_down_refs.txt"-}










 {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}










 {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}










 {-let ones = map extract (all_combined:onesM)-}










 {-pairs = map extract (all_combined:pairsM)-}










 {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}










 {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}










 {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}










 {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}










 {-five_ups = foldl union empty (map cybertToSet five_up)-}










 {-five_downs = foldl union empty (map cybertToSet five_down)-}










 {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}










 {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}










 ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt"










 ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt"










 let older = extract older'










 xeno = extract xeno'










 older_ups = entriesByPval 0.05 (entriesByUpDown True older)










 older_downs = entriesByPval 0.05 (entriesByUpDown False older)










 ; exportCybert older_ups "older_patients_up.txt"










 ; exportCybert older_downs "older_patients_down.txt"










 let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xeno










 xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xeno










 ; exportCybert xeno_ups "xeno_up.txt"










 ; exportCybert xeno_downs "xeno_down.txt"


 -- count cross lists num-- count cross lists numloadCybert' = loadCybert cybert_headerloadCybert'=loadCybertcybert_headermain = domain=do all_combined <- loadCybert' "./CyberT_Output/unpaired/CD271_all_together0.txt"all_combined<-loadCybert'"./CyberT_Output/unpaired/CD271_all_together0.txt" let all_up = (entriesByPval 0.05) $ (entriesByUpDown True) (extract all_combined)letall_up=(entriesByPval0.05)$(entriesByUpDownTrue)(extractall_combined) all_down = (entriesByPval 0.05) $ (entriesByUpDown False) (extract all_combined)all_down=(entriesByPval0.05)$(entriesByUpDownFalse)(extractall_combined) ; exportCybert all_up "all_up_refs.txt";exportCybertall_up"all_up_refs.txt" ; exportCybert all_down "all_down_refs.txt";exportCybertall_down"all_down_refs.txt" ; onesM <- mapM loadCybert' $ map ("./CyberT_Output/unpaired/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"];onesM<-mapMloadCybert'$map("./CyberT_Output/unpaired/CD271_one_one"++)["0.txt","1.txt","2.txt","3.txt"] ; pairsM <- mapM loadCybert' ["./CyberT_Output/unpaired/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ];pairsM<-mapMloadCybert'["./CyberT_Output/unpaired/CD271_two_two_"++i++j++".txt"|i<-["1","2","3"],j<-["0","1"]] let ones = map extract (all_combined:onesM)letones=mapextract(all_combined:onesM) pairs = map extract (all_combined:pairsM)pairs=mapextract(all_combined:pairsM) let up = map (entriesByPval 0.05) (map (entriesByUpDown True) pairs)letup=map(entriesByPval0.05)(map(entriesByUpDownTrue)pairs) down = map (entriesByPval 0.05) (map (entriesByUpDown False) pairs)down=map(entriesByPval0.05)(map(entriesByUpDownFalse)pairs) five_up = map (filter (\x -> countln (pfind x up) >= 5 )) upfive_up=map(filter(\x->countln(pfindxup)>=5))up five_down =map (filter (\x -> countln (pfind x down) >= 5 )) downfive_down=map(filter(\x->countln(pfindxdown)>=5))down five_ups = foldl union empty (map cybertToSet five_up)five_ups=foldlunionempty(mapcybertToSetfive_up) five_downs = foldl union empty (map cybertToSet five_down)five_downs=foldlunionempty(mapcybertToSetfive_down) ; exportCybert (toList five_ups) "five_up_refs.txt" ;exportCybert(toListfive_ups)"five_up_refs.txt" ; exportCybert (toList five_downs) "five_down_refs.txt" ;exportCybert(toListfive_downs)"five_down_refs.txt" {-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-}{-all_combined <- loadCybert' "./CyberT_Output/paired_2/CD271_all_together0.txt"-} {-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-}{-let all_up = (entriesByPval 0.05) $ (entriesByUpDown True)  (extract all_combined)-} {-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-}{-all_down = (entriesByPval 0.05) $ (entriesByUpDown False)  (extract all_combined)-} {-; exportCybert all_up "all_up_refs.txt"-}{-; exportCybert all_up "all_up_refs.txt"-} {-; exportCybert all_down "all_down_refs.txt"-}{-; exportCybert all_down "all_down_refs.txt"-} {-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-}{-; onesM <- mapM loadCybert' $ map ("./CyberT_Output/paired_2/CD271_one_one" ++ ) ["0.txt","1.txt","2.txt","3.txt"]-} {-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-}{-; pairsM <- mapM loadCybert' ["./CyberT_Output/paired_2/CD271_two_two_" ++i ++ j ++ ".txt" | i <- ["1","2","3"], j<-["0","1"] ]-} {-let ones = map extract (all_combined:onesM)-}{-let ones = map extract (all_combined:onesM)-} {-pairs = map extract (all_combined:pairsM)-}{-pairs = map extract (all_combined:pairsM)-} {-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-}{-let up = map  (entriesByPval 0.05)  (map (entriesByUpDown True) pairs)-} {-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-}{-down = map  (entriesByPval 0.05)  (map (entriesByUpDown False) pairs)-} {-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-}{-five_up = map (filter (\x ->  countln (pfind x up) >= 5 )) up-} {-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-}{-five_down =map (filter (\x -> countln (pfind x down) >= 5 )) down-} {-five_ups = foldl union empty (map cybertToSet five_up)-}{-five_ups = foldl union empty (map cybertToSet five_up)-} {-five_downs = foldl union empty (map cybertToSet five_down)-}{-five_downs = foldl union empty (map cybertToSet five_down)-} {-;  exportCybert (toList five_ups) "five_up_refs.txt" -}{-;  exportCybert (toList five_ups) "five_up_refs.txt" -} {-;  exportCybert (toList five_downs) "five_down_refs.txt" -}{-;  exportCybert (toList five_downs) "five_down_refs.txt" -} ; older' <- loadCybert' "./CyberT_Output/paired_2/CD271_two_two_13.txt";older'<-loadCybert'"./CyberT_Output/paired_2/CD271_two_two_13.txt" ; xeno' <- loadCybert' "./CyberT_Output/paired_2/CD271_one_one4.txt";xeno'<-loadCybert'"./CyberT_Output/paired_2/CD271_one_one4.txt" let older = extract older'letolder=extractolder' xeno = extract xeno'xeno=extractxeno' older_ups = entriesByPval 0.05 (entriesByUpDown True older)older_ups=entriesByPval0.05(entriesByUpDownTrueolder) older_downs = entriesByPval 0.05 (entriesByUpDown False older)older_downs=entriesByPval0.05(entriesByUpDownFalseolder) ; exportCybert older_ups "older_patients_up.txt";exportCybertolder_ups"older_patients_up.txt" ; exportCybert older_downs "older_patients_down.txt";exportCybertolder_downs"older_patients_down.txt" let xeno_ups = entriesByFold 1 $ entriesByUpDown (True) xenoletxeno_ups=entriesByFold1$entriesByUpDown(True)xeno xeno_downs = entriesByFold 1 $ entriesByUpDown (False) xenoxeno_downs=entriesByFold1$entriesByUpDown(False)xeno ; exportCybert xeno_ups "xeno_up.txt";exportCybertxeno_ups"xeno_up.txt" ; exportCybert xeno_downs "xeno_down.txt";exportCybertxeno_downs"xeno_down.txt"








cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258





This diff is collapsed.
Click to expand it.











cybert/txts/testload.tsv



0 â†’ 100644







View file @ 8efaa258








cybert/txts/testload.tsv



0 â†’ 100644









View file @ 8efaa258


8efaa258


This diff is collapsed.
Click to expand it.




This diff is collapsed.
Click to expand it.


This diff is collapsed.
Click to expand it.










Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel





Please register or sign in to comment









Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Finish editing this message first!



Cancel







Write




Preview































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel










You are about to add

0
people

to the discussion. Proceed with caution.





Write




Preview






















Write



Preview











































Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel












Supports Markdown






0%










Try again


or


attach a new file


.




Attach a file




Cancel




Supports Markdown





0%










Try again


or


attach a new file


.




Attach a file




Cancel






0%


0%







Try again


or


attach a new file


.




Try again

attach a new file

Attach a file

Cancel



You are about to add

0
people

to the discussion. Proceed with caution.



You are about to add

0
people

to the discussion. Proceed with caution.
0

Finish editing this message first!



Cancel



Finish editing this message first!

Cancel


Please register or sign in to comment






