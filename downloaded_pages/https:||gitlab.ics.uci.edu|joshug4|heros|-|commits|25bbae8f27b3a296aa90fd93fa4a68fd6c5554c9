



GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab


















Projects
Groups
Snippets



GitLab






GitLab









Projects
Groups
Snippets






Projects
Groups
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Joshua Garcia heros

Commits


















25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros
















18 Sep, 2013
1 commit









Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f










08 Sep, 2013
1 commit









Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf










06 Sep, 2013
1 commit









Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde










28 Aug, 2013
3 commits









updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5













Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5













new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8










17 Jul, 2013
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581













added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59










11 Jul, 2013
3 commits









simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c













Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a













improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312










10 Jul, 2013
3 commits









removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe













Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f













shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575










09 Jul, 2013
4 commits









removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14













comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6













removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d













first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2










08 Jul, 2013
3 commits









bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2













bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670













don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd










07 Jul, 2013
2 commits









further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41













improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee










06 Jul, 2013
13 commits









don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83













toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572













changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df













Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c













removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7













make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535













finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab













BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59













removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4













added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99













extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8













made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20













updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748










05 Jul, 2013
4 commits









Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5













changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783













more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0













initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732



















H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Joshua Garcia heros

Commits


















25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros
















18 Sep, 2013
1 commit









Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f










08 Sep, 2013
1 commit









Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf










06 Sep, 2013
1 commit









Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde










28 Aug, 2013
3 commits









updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5













Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5













new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8










17 Jul, 2013
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581













added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59










11 Jul, 2013
3 commits









simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c













Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a













improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312










10 Jul, 2013
3 commits









removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe













Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f













shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575










09 Jul, 2013
4 commits









removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14













comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6













removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d













first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2










08 Jul, 2013
3 commits









bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2













bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670













don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd










07 Jul, 2013
2 commits









further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41













improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee










06 Jul, 2013
13 commits









don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83













toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572













changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df













Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c













removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7













make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535













finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab













BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59













removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4













added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99













extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8













made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20













updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748










05 Jul, 2013
4 commits









Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5













changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783













more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0













initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732


















Open sidebar



Joshua Garcia heros

Commits







Open sidebar



Joshua Garcia heros

Commits




Open sidebar

Joshua Garcia heros

Commits


Joshua Garciaherosheros
Commits











25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros
















18 Sep, 2013
1 commit









Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f










08 Sep, 2013
1 commit









Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf










06 Sep, 2013
1 commit









Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde










28 Aug, 2013
3 commits









updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5













Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5













new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8










17 Jul, 2013
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581













added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59










11 Jul, 2013
3 commits









simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c













Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a













improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312










10 Jul, 2013
3 commits









removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe













Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f













shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575










09 Jul, 2013
4 commits









removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14













comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6













removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d













first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2










08 Jul, 2013
3 commits









bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2













bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670













don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd










07 Jul, 2013
2 commits









further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41













improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee










06 Jul, 2013
13 commits









don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83













toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572













changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df













Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c













removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7













make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535













finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab













BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59













removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4













added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99













extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8













made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20













updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748










05 Jul, 2013
4 commits









Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5













changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783













more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0













initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732






















25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros
















18 Sep, 2013
1 commit









Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f










08 Sep, 2013
1 commit









Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf










06 Sep, 2013
1 commit









Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde










28 Aug, 2013
3 commits









updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5













Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5













new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8










17 Jul, 2013
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581













added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59










11 Jul, 2013
3 commits









simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c













Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a













improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312










10 Jul, 2013
3 commits









removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe













Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f













shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575










09 Jul, 2013
4 commits









removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14













comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6













removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d













first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2










08 Jul, 2013
3 commits









bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2













bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670













don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd










07 Jul, 2013
2 commits









further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41













improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee










06 Jul, 2013
13 commits









don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83













toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572













changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df













Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c













removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7













make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535













finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab













BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59













removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4













added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99













extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8













made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20













updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748










05 Jul, 2013
4 commits









Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5













changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783













more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0













initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732


















25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros

















25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros















25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag









heros




25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag








25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9


Switch branch/tag





25bbae8f27b3a296aa90fd93fa4a68fd6c5554c9

Switch branch/tag





Switch branch/tag



Switch branch/tagSwitch branch/tagheros













18 Sep, 2013
1 commit









Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f










08 Sep, 2013
1 commit









Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf










06 Sep, 2013
1 commit









Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde










28 Aug, 2013
3 commits









updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5













Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5













new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8










17 Jul, 2013
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581













added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59










11 Jul, 2013
3 commits









simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c













Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a













improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312










10 Jul, 2013
3 commits









removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe













Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f













shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575










09 Jul, 2013
4 commits









removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14













comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6













removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d













first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2










08 Jul, 2013
3 commits









bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2













bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670













don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd










07 Jul, 2013
2 commits









further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41













improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee










06 Jul, 2013
13 commits









don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83













toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572













changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df













Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c













removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7













make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535













finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab













BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59













removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4













added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99













extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8













made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20













updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748










05 Jul, 2013
4 commits









Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5













changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783













more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0













initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732











18 Sep, 2013
1 commit
18 Sep, 20131 commit







Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f














Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f










Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.





25bbae8f






Refactored flow function computation to call FlowFunction.computeTargets in a...

·
25bbae8f





Steven Arzt authored Sep 18, 2013

Refactored flow function computation to call FlowFunction.computeTargets in a protected method (which can be overwritten by child classes) instead of directly in the solver logic.

The concrete use case was a return flow function which needed access to the context in which it was applied. With this refactoring, one can now simply subclass the solver, overwrite the new protected method and do one's problem-specific magic there.

·
25bbae8f

Steven Arzt authored Sep 18, 2013




25bbae8f






25bbae8f




25bbae8f

08 Sep, 2013
1 commit
08 Sep, 20131 commit







Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf














Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf










Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3





77f730bf






Merge pull request #4 from malaverdiere/develop

·
77f730bf





Eric Bodden authored Sep 08, 2013


Added counter resetting and thread interruption to fix #3

·
77f730bf

Eric Bodden authored Sep 08, 2013




77f730bf






77f730bf




77f730bf

06 Sep, 2013
1 commit
06 Sep, 20131 commit







Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde














Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde










Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013






f0141dde






Added counter resetting and thread interruption to fix #3

·
f0141dde


Marc-André Laverdière authored Sep 06, 2013


·
f0141dde

Marc-André Laverdière authored Sep 06, 2013




f0141dde






f0141dde




f0141dde

28 Aug, 2013
3 commits
28 Aug, 20133 commits







updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5













Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5













new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8














updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5










updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013






6a2dd7b5






updated templates to new guava version

·
6a2dd7b5


Eric Bodden authored Aug 28, 2013


·
6a2dd7b5

Eric Bodden authored Aug 28, 2013




6a2dd7b5






6a2dd7b5




6a2dd7b5






Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5










Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013






70a982b5






Merge commit '888ec581' into develop

·
70a982b5


Eric Bodden authored Aug 28, 2013


·
70a982b5

Eric Bodden authored Aug 28, 2013




70a982b5






70a982b5




70a982b5






new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8










new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013






3b8f82f8






new version of guava

·
3b8f82f8


Eric Bodden authored Aug 28, 2013


·
3b8f82f8

Eric Bodden authored Aug 28, 2013




3b8f82f8






3b8f82f8




3b8f82f8

17 Jul, 2013
2 commits
17 Jul, 20132 commits







Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581













added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59














Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581










Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013






888ec581






Merge branch 'develop' of github.com:Sable/heros into develop

·
888ec581


Steven Arzt authored Jul 17, 2013


·
888ec581

Steven Arzt authored Jul 17, 2013




888ec581






888ec581




888ec581






added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59










added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013






94dc7f59






added build configuration file for Jenkins server

·
94dc7f59


Steven Arzt authored Jul 17, 2013


·
94dc7f59

Steven Arzt authored Jul 17, 2013




94dc7f59






94dc7f59




94dc7f59

11 Jul, 2013
3 commits
11 Jul, 20133 commits







simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c













Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a













improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312














simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c










simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013






bdc8348c






simplified exception handling

·
bdc8348c


Eric Bodden authored Jul 11, 2013


·
bdc8348c

Eric Bodden authored Jul 11, 2013




bdc8348c






bdc8348c




bdc8348c






Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a










Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013






e554bf8a






Merge branch 'feature/exception-handling' into develop

·
e554bf8a


Eric Bodden authored Jul 11, 2013


·
e554bf8a

Eric Bodden authored Jul 11, 2013




e554bf8a






e554bf8a




e554bf8a






improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312










improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013






f8827312






improved handling of number of threads (thanks Johannes!)

·
f8827312


Eric Bodden authored Jul 11, 2013


·
f8827312

Eric Bodden authored Jul 11, 2013




f8827312






f8827312




f8827312

10 Jul, 2013
3 commits
10 Jul, 20133 commits







removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe













Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f













shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575














removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe










removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013






3f7647fe






removing superfluous (hopefully?) call to scheduleEdgeProcessing

·
3f7647fe


Eric Bodden authored Jul 10, 2013


·
3f7647fe

Eric Bodden authored Jul 10, 2013




3f7647fe






3f7647fe




3f7647fe






Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f










Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java





16ed129f






Merge branch 'develop' into feature/exception-handling

·
16ed129f





Eric Bodden authored Jul 10, 2013


Conflicts:
	src/heros/solver/IDESolver.java

·
16ed129f

Eric Bodden authored Jul 10, 2013




16ed129f






16ed129f




16ed129f






shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575










shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013






cd7c8575






shutdown now

·
cd7c8575


Eric Bodden authored Jul 10, 2013


·
cd7c8575

Eric Bodden authored Jul 10, 2013




cd7c8575






cd7c8575




cd7c8575

09 Jul, 2013
4 commits
09 Jul, 20134 commits







removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14













comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6













removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d













first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2














removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14










removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013






83d31a14






removing notes

·
83d31a14


Eric Bodden authored Jul 09, 2013


·
83d31a14

Eric Bodden authored Jul 09, 2013




83d31a14






83d31a14




83d31a14






comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6










comments

·
14579ce6


Eric Bodden authored Jul 09, 2013






14579ce6






comments

·
14579ce6


Eric Bodden authored Jul 09, 2013


·
14579ce6

Eric Bodden authored Jul 09, 2013




14579ce6






14579ce6




14579ce6






removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d










removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013






4835598d






removed unused import

·
4835598d


Eric Bodden authored Jul 09, 2013


·
4835598d

Eric Bodden authored Jul 09, 2013




4835598d






4835598d




4835598d






first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2










first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns





1526d8d2






first version of fw-bw lockstep analysis that seems to be working; the trick...

·
1526d8d2





Eric Bodden authored Jul 09, 2013

first version of fw-bw lockstep analysis that seems to be working; the trick was apparently to distinguish balanced from unbalanced returns

·
1526d8d2

Eric Bodden authored Jul 09, 2013




1526d8d2






1526d8d2




1526d8d2

08 Jul, 2013
3 commits
08 Jul, 20133 commits







bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2













bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670













don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd














bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2










bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013






1a2d0aa2






bugfix: don't forget to change "source" attachment when unpausing an edge

·
1a2d0aa2


Eric Bodden authored Jul 08, 2013


·
1a2d0aa2

Eric Bodden authored Jul 08, 2013




1a2d0aa2






1a2d0aa2




1a2d0aa2






bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670










bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013






14372670






bugfix: must implement equals/hashCode for abstraction!

·
14372670


Eric Bodden authored Jul 08, 2013


·
14372670

Eric Bodden authored Jul 08, 2013




14372670






14372670




14372670






don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd










don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013






844fa2fd






don't pause conditional edges

·
844fa2fd


Eric Bodden authored Jul 08, 2013


·
844fa2fd

Eric Bodden authored Jul 08, 2013




844fa2fd






844fa2fd




844fa2fd

07 Jul, 2013
2 commits
07 Jul, 20132 commits







further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41













improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee














further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41










further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO





e8034a41






further fix for followReturnPastSeeds:

·
e8034a41





Eric Bodden authored Jul 08, 2013

regarding Steven's earlier fix we now follow a different strategy…
we propagate upwards in an unbalanced way only such facts that originate from ZERO

·
e8034a41

Eric Bodden authored Jul 08, 2013




e8034a41






e8034a41




e8034a41






improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee










improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier





44d17eee






improved and simplified handling of unbalanced problems:

·
44d17eee





Eric Bodden authored Jul 08, 2013

we now just propagate up the call stack in an unbalanced way if for the very flow fact we are looking at there
was no incoming flow observed earlier

·
44d17eee

Eric Bodden authored Jul 08, 2013




44d17eee






44d17eee




44d17eee

06 Jul, 2013
13 commits
06 Jul, 201313 commits







don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83













toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572













changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df













Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c













removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7













make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535













finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab













BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59













removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4













added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99













extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8













made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20













updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748














don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83










don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013






ae092b83






don't forget to clear pause list un unpause

·
ae092b83


Eric Bodden authored Jul 06, 2013


·
ae092b83

Eric Bodden authored Jul 06, 2013




ae092b83






ae092b83




ae092b83






toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572










toString

·
a6afa572


Eric Bodden authored Jul 06, 2013






a6afa572






toString

·
a6afa572


Eric Bodden authored Jul 06, 2013


·
a6afa572

Eric Bodden authored Jul 06, 2013




a6afa572






a6afa572




a6afa572






changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df










changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return





b8e2c3df






changed signature of "propagate" to include original call site for return and call flows

·
b8e2c3df





Eric Bodden authored Jul 06, 2013


modified bidi solver to changed attached source statement on return

·
b8e2c3df

Eric Bodden authored Jul 06, 2013




b8e2c3df






b8e2c3df




b8e2c3df






Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c










Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java





eec2141c






Merge branch 'develop' into forks/java-fw-bw

·
eec2141c





Eric Bodden authored Jul 06, 2013


Conflicts:
	src/heros/solver/IDESolver.java

·
eec2141c

Eric Bodden authored Jul 06, 2013




eec2141c






eec2141c




eec2141c






removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7










removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013






336790c7






removed superfluous type parameter from PathEdge

·
336790c7


Eric Bodden authored Jul 06, 2013


·
336790c7

Eric Bodden authored Jul 06, 2013




336790c7






336790c7




336790c7






make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535










make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013






fef14535






make "propagate" protected

·
fef14535


Eric Bodden authored Jul 06, 2013


·
fef14535

Eric Bodden authored Jul 06, 2013




fef14535






fef14535




fef14535






finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab










finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013






f8635eab






finalized (?) logic for bidi solver

·
f8635eab


Eric Bodden authored Jul 06, 2013


·
f8635eab

Eric Bodden authored Jul 06, 2013




f8635eab






f8635eab




f8635eab






BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59










BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013






a3a45f59






BiDiSolver: support for debug name and simultaneous submission of both analyses

·
a3a45f59


Eric Bodden authored Jul 06, 2013


·
a3a45f59

Eric Bodden authored Jul 06, 2013




a3a45f59






a3a45f59




a3a45f59






removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4










removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013






734c0ca4






removed unused import

·
734c0ca4


Eric Bodden authored Jul 06, 2013


·
734c0ca4

Eric Bodden authored Jul 06, 2013




734c0ca4






734c0ca4




734c0ca4






added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99










added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013






68501d99






added support for debug name

·
68501d99


Eric Bodden authored Jul 06, 2013


·
68501d99

Eric Bodden authored Jul 06, 2013




68501d99






68501d99




68501d99






extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8










extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013






6a9d93c8






extracting method submitInitialSeeds to allow submission without having to wait

·
6a9d93c8


Eric Bodden authored Jul 06, 2013


·
6a9d93c8

Eric Bodden authored Jul 06, 2013




6a9d93c8






6a9d93c8




6a9d93c8






made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20










made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013






56975c20






made process* methods protected

·
56975c20


Eric Bodden authored Jul 06, 2013


·
56975c20

Eric Bodden authored Jul 06, 2013




56975c20






56975c20




56975c20






updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748










updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013






a839d748






updated initialSeeds to include source statement

·
a839d748


Eric Bodden authored Jul 06, 2013


·
a839d748

Eric Bodden authored Jul 06, 2013




a839d748






a839d748




a839d748

05 Jul, 2013
4 commits
05 Jul, 20134 commits







Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5













changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783













more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0













initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732














Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5










Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013






baaa3dc5






Merge branch 'develop' into forks/java-fw-bw

·
baaa3dc5


Eric Bodden authored Jul 05, 2013


·
baaa3dc5

Eric Bodden authored Jul 05, 2013




baaa3dc5






baaa3dc5




baaa3dc5






changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783










changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way





275f5783






changing initialization of analysis such that initialSeeds not is a mapping...

·
275f5783





Eric Bodden authored Jul 05, 2013

changing initialization of analysis such that initialSeeds not is a mapping from units to initial data-flow facts at these units

this is a breaking change, but the class DefaultSeeds can be used to easily convert a set of units (old format) into a default map that should work for current clients

the change was implemented to permit subtypes of IFDSTabulationProblem to overwrite facts at seeds in a convenient way

·
275f5783

Eric Bodden authored Jul 05, 2013




275f5783






275f5783




275f5783






more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0










more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013






0a55e6f0






more advances on BiDi Solver

·
0a55e6f0


Eric Bodden authored Jul 05, 2013


·
0a55e6f0

Eric Bodden authored Jul 05, 2013




0a55e6f0






0a55e6f0




0a55e6f0






initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732










initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013






3e910732






initial draft of BiDi Solver

·
3e910732


Eric Bodden authored Jul 05, 2013


·
3e910732

Eric Bodden authored Jul 05, 2013




3e910732






3e910732




3e910732






