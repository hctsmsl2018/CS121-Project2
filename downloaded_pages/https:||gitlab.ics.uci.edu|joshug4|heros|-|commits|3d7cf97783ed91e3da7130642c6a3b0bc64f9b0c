



GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu








GitLab


















Projects
Groups
Snippets


















/












Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Toggle navigation

Menu






GitLab


















Projects
Groups
Snippets



GitLab






GitLab









Projects
Groups
Snippets






Projects
Groups
Snippets















/




















/














/










Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab







Sign in





Help









Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help





Help


Support


Community forum



Keyboard shortcuts
?




Submit feedback


Contribute to GitLab





Help

Support

Community forum


Keyboard shortcuts
?


Submit feedback

Contribute to GitLab



Sign in


Sign in
Toggle navigation
Menu

Menu




H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar








Open sidebar



Joshua Garcia heros

Commits


















3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros
















02 Apr, 2014
1 commit









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977










10 Mar, 2014
1 commit









fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806










03 Mar, 2014
1 commit









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1










28 Feb, 2014
1 commit









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10










17 Jan, 2014
2 commits









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d










15 Jan, 2014
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4










24 Dec, 2013
3 commits









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928










15 Dec, 2013
2 commits









include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7










28 Nov, 2013
1 commit









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f










31 Oct, 2013
2 commits









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066










28 Oct, 2013
8 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266













Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b













comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf













added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc













fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb













exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43













Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333













suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6










26 Oct, 2013
3 commits









Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e













added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac













removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85










25 Oct, 2013
1 commit









1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e










23 Oct, 2013
1 commit









added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047










18 Oct, 2013
4 commits









Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302













Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013













Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc













added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b










14 Oct, 2013
3 commits









added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a













Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614













made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a










10 Oct, 2013
4 commits









Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e













Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2













Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3













1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7



















H


heros






Project information




Project information




Activity


Labels


Members







Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare







Issues

0



Issues

0



List


Boards


Service Desk


Milestones







Merge requests

0



Merge requests

0






CI/CD




CI/CD




Pipelines


Jobs


Schedules







Deployments




Deployments




Environments


Releases







Monitor




Monitor




Incidents







Analytics




Analytics




Value stream


CI/CD


Repository







Wiki




Wiki





Activity


Graph


Create a new issue


Jobs


Commits


Issue Boards




Collapse sidebar


Close sidebar


H


heros


H
H
heros




Project information




Project information




Activity


Labels


Members






Project information


Project information




Project information


Activity


Activity

Labels


Labels

Members


Members




Repository




Repository




Files


Commits


Branches


Tags


Contributors


Graph


Compare






Repository


Repository




Repository


Files


Files

Commits


Commits

Branches


Branches

Tags


Tags

Contributors


Contributors

Graph


Graph

Compare


Compare




Issues

0



Issues

0



List


Boards


Service Desk


Milestones






Issues
0


Issues

0



Issues

0
0

List


List

Boards


Boards

Service Desk


Service Desk

Milestones


Milestones




Merge requests

0



Merge requests

0





Merge requests
0


Merge requests

0



Merge requests

0
0




CI/CD




CI/CD




Pipelines


Jobs


Schedules






CI/CD


CI/CD




CI/CD


Pipelines


Pipelines

Jobs


Jobs

Schedules


Schedules




Deployments




Deployments




Environments


Releases






Deployments


Deployments




Deployments


Environments


Environments

Releases


Releases




Monitor




Monitor




Incidents






Monitor


Monitor




Monitor


Incidents


Incidents




Analytics




Analytics




Value stream


CI/CD


Repository






Analytics


Analytics




Analytics


Value stream


Value stream

CI/CD


CI/CD

Repository


Repository




Wiki




Wiki






Wiki


Wiki




Wiki


Activity

Graph

Create a new issue

Jobs

Commits

Issue Boards
Collapse sidebarClose sidebar




Open sidebar



Joshua Garcia heros

Commits


















3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros
















02 Apr, 2014
1 commit









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977










10 Mar, 2014
1 commit









fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806










03 Mar, 2014
1 commit









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1










28 Feb, 2014
1 commit









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10










17 Jan, 2014
2 commits









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d










15 Jan, 2014
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4










24 Dec, 2013
3 commits









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928










15 Dec, 2013
2 commits









include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7










28 Nov, 2013
1 commit









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f










31 Oct, 2013
2 commits









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066










28 Oct, 2013
8 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266













Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b













comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf













added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc













fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb













exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43













Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333













suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6










26 Oct, 2013
3 commits









Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e













added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac













removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85










25 Oct, 2013
1 commit









1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e










23 Oct, 2013
1 commit









added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047










18 Oct, 2013
4 commits









Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302













Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013













Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc













added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b










14 Oct, 2013
3 commits









added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a













Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614













made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a










10 Oct, 2013
4 commits









Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e













Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2













Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3













1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7


















Open sidebar



Joshua Garcia heros

Commits







Open sidebar



Joshua Garcia heros

Commits




Open sidebar

Joshua Garcia heros

Commits


Joshua Garciaherosheros
Commits











3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros
















02 Apr, 2014
1 commit









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977










10 Mar, 2014
1 commit









fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806










03 Mar, 2014
1 commit









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1










28 Feb, 2014
1 commit









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10










17 Jan, 2014
2 commits









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d










15 Jan, 2014
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4










24 Dec, 2013
3 commits









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928










15 Dec, 2013
2 commits









include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7










28 Nov, 2013
1 commit









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f










31 Oct, 2013
2 commits









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066










28 Oct, 2013
8 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266













Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b













comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf













added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc













fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb













exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43













Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333













suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6










26 Oct, 2013
3 commits









Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e













added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac













removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85










25 Oct, 2013
1 commit









1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e










23 Oct, 2013
1 commit









added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047










18 Oct, 2013
4 commits









Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302













Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013













Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc













added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b










14 Oct, 2013
3 commits









added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a













Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614













made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a










10 Oct, 2013
4 commits









Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e













Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2













Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3













1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7






















3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros
















02 Apr, 2014
1 commit









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977










10 Mar, 2014
1 commit









fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806










03 Mar, 2014
1 commit









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1










28 Feb, 2014
1 commit









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10










17 Jan, 2014
2 commits









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d










15 Jan, 2014
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4










24 Dec, 2013
3 commits









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928










15 Dec, 2013
2 commits









include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7










28 Nov, 2013
1 commit









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f










31 Oct, 2013
2 commits









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066










28 Oct, 2013
8 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266













Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b













comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf













added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc













fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb













exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43













Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333













suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6










26 Oct, 2013
3 commits









Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e













added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac













removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85










25 Oct, 2013
1 commit









1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e










23 Oct, 2013
1 commit









added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047










18 Oct, 2013
4 commits









Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302













Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013













Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc













added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b










14 Oct, 2013
3 commits









added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a













Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614













made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a










10 Oct, 2013
4 commits









Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e













Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2













Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3













1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7


















3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros

















3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros















3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag









heros




3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag








3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c


Switch branch/tag





3d7cf97783ed91e3da7130642c6a3b0bc64f9b0c

Switch branch/tag





Switch branch/tag



Switch branch/tagSwitch branch/tagheros













02 Apr, 2014
1 commit









generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977










10 Mar, 2014
1 commit









fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806










03 Mar, 2014
1 commit









Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1










28 Feb, 2014
1 commit









Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10










17 Jan, 2014
2 commits









generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d










15 Jan, 2014
2 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4










24 Dec, 2013
3 commits









cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928










15 Dec, 2013
2 commits









include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7










28 Nov, 2013
1 commit









pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f










31 Oct, 2013
2 commits









made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066










28 Oct, 2013
8 commits









Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266













Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b













comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf













added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc













fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb













exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43













Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333













suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6










26 Oct, 2013
3 commits









Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e













added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac













removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85










25 Oct, 2013
1 commit









1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e










23 Oct, 2013
1 commit









added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047










18 Oct, 2013
4 commits









Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302













Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013













Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc













added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b










14 Oct, 2013
3 commits









added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a













Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614













made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a










10 Oct, 2013
4 commits









Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e













Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2













Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3













1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7











02 Apr, 2014
1 commit
02 Apr, 20141 commit







generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977














generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977










generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014






3d7cf977






generalized ICFG types

·
3d7cf977


Steven Arzt authored Apr 02, 2014


·
3d7cf977

Steven Arzt authored Apr 02, 2014




3d7cf977






3d7cf977




3d7cf977

10 Mar, 2014
1 commit
10 Mar, 20141 commit







fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806














fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806










fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014






c61a8806






fixed the ant settings file

·
c61a8806


Steven Arzt authored Mar 10, 2014


·
c61a8806

Steven Arzt authored Mar 10, 2014




c61a8806






c61a8806




c61a8806

03 Mar, 2014
1 commit
03 Mar, 20141 commit







Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1














Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1










Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014






81655ff1






Added missing restoreContext call in processCall

·
81655ff1


Johannes Lerch authored Mar 03, 2014


·
81655ff1

Johannes Lerch authored Mar 03, 2014




81655ff1






81655ff1




81655ff1

28 Feb, 2014
1 commit
28 Feb, 20141 commit







Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10














Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10










Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.





2c10ea10






Enabling possibility to reuse summaries in callees by setting source

·
2c10ea10





Johannes Lerch authored Feb 28, 2014

statement to null and restoring original source statement when returning
context sensitively.

·
2c10ea10

Johannes Lerch authored Feb 28, 2014




2c10ea10






2c10ea10




2c10ea10

17 Jan, 2014
2 commits
17 Jan, 20142 commits







generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f













caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d














generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f










generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014






4b76e92f






generalized some return types

·
4b76e92f


Steven Arzt authored Jan 17, 2014


·
4b76e92f

Steven Arzt authored Jan 17, 2014




4b76e92f






4b76e92f




4b76e92f






caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d










caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014






3b6c322d






caching hash value

·
3b6c322d


Steven Arzt authored Jan 17, 2014


·
3b6c322d

Steven Arzt authored Jan 17, 2014




3b6c322d






3b6c322d




3b6c322d

15 Jan, 2014
2 commits
15 Jan, 20142 commits







Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc













generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4














Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc










Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014






c9477ecc






Merge branch 'develop' of github.com:Sable/heros into develop

·
c9477ecc


Steven Arzt authored Jan 15, 2014


·
c9477ecc

Steven Arzt authored Jan 15, 2014




c9477ecc






c9477ecc




c9477ecc






generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4










generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014






0b0c5ba4






generalized a data structure

·
0b0c5ba4


Steven Arzt authored Jan 15, 2014


·
0b0c5ba4

Steven Arzt authored Jan 15, 2014




0b0c5ba4






0b0c5ba4




0b0c5ba4

24 Dec, 2013
3 commits
24 Dec, 20133 commits







cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a













made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc













added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928














cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a










cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013






f21c884a






cleaned up code

·
f21c884a


Eric Bodden authored Dec 24, 2013


·
f21c884a

Eric Bodden authored Dec 24, 2013




f21c884a






f21c884a




f21c884a






made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc










made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013






802bc2dc






made Gen and Transfer use TwoElementSet

·
802bc2dc


Eric Bodden authored Dec 24, 2013


·
802bc2dc

Eric Bodden authored Dec 24, 2013




802bc2dc






802bc2dc




802bc2dc






added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928










added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet





c52d9928






added class TwoElementSet, which implements exactly what the name says; useful...

·
c52d9928





Eric Bodden authored Dec 24, 2013

added class TwoElementSet, which implements exactly what the name says; useful for use within FlowFunction, as it is much more efficient than using a two-element HashSet

·
c52d9928

Eric Bodden authored Dec 24, 2013




c52d9928






c52d9928




c52d9928

15 Dec, 2013
2 commits
15 Dec, 20132 commits







include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207













cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7














include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207










include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013






35395207






include SLF4J in heros.jar

·
35395207


Eric Bodden authored Dec 15, 2013


·
35395207

Eric Bodden authored Dec 15, 2013




35395207






35395207




35395207






cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7










cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013






a278d4f7






cleaned up code

·
a278d4f7


Eric Bodden authored Dec 15, 2013


·
a278d4f7

Eric Bodden authored Dec 15, 2013




a278d4f7






a278d4f7




a278d4f7

28 Nov, 2013
1 commit
28 Nov, 20131 commit







pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f














pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f










pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013






3980d99f






pulled up the LinkedNode interface onto the first level

·
3980d99f


Steven Arzt authored Nov 28, 2013


·
3980d99f

Steven Arzt authored Nov 28, 2013




3980d99f






3980d99f




3980d99f

31 Oct, 2013
2 commits
31 Oct, 20132 commits







made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595













added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066














made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595










made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013






4d3ab595






made the path cache for joining abstraction protected instead of private

·
4d3ab595


Steven Arzt authored Oct 31, 2013


·
4d3ab595

Steven Arzt authored Oct 31, 2013




4d3ab595






4d3ab595




4d3ab595






added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066










added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013






fdced066






added a function to clear the jump functions

·
fdced066


Steven Arzt authored Oct 31, 2013


·
fdced066

Steven Arzt authored Oct 31, 2013




fdced066






fdced066




fdced066

28 Oct, 2013
8 commits
28 Oct, 20138 commits







Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266













Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b













comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf













added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc













fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb













exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43













Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333













suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6














Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266










Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013






fbd27266






Merge branch 'develop' of github.com:Sable/heros into develop

·
fbd27266


Steven Arzt authored Oct 28, 2013


·
fbd27266

Steven Arzt authored Oct 28, 2013




fbd27266






fbd27266




fbd27266






Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b










Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver





3c46813b






Refactoring: Call flow function is now also computed in a protected method to...

·
3c46813b





Steven Arzt authored Oct 28, 2013

Refactoring: Call flow function is now also computed in a protected method to allow for changes in custom derived solver

·
3c46813b

Steven Arzt authored Oct 28, 2013




3c46813b






3c46813b




3c46813b






comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf










comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013






e0e1cdaf






comments

·
e0e1cdaf


Eric Bodden authored Oct 28, 2013


·
e0e1cdaf

Eric Bodden authored Oct 28, 2013




e0e1cdaf






e0e1cdaf




e0e1cdaf






added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc










added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013






52970dcc






added union flow function

·
52970dcc


Eric Bodden authored Oct 28, 2013


·
52970dcc

Eric Bodden authored Oct 28, 2013




52970dcc






52970dcc




52970dcc






fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb










fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013






2a1414bb






fixed comment

·
2a1414bb


Eric Bodden authored Oct 28, 2013


·
2a1414bb

Eric Bodden authored Oct 28, 2013




2a1414bb






2a1414bb




2a1414bb






exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43










exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013






d2e7bb43






exporting slf4j

·
d2e7bb43


Eric Bodden authored Oct 28, 2013


·
d2e7bb43

Eric Bodden authored Oct 28, 2013




d2e7bb43






d2e7bb43




d2e7bb43






Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333










Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013






b90d9333






Merge branch 'develop' of https://github.com/Sable/heros into develop

·
b90d9333


Eric Bodden authored Oct 28, 2013


·
b90d9333

Eric Bodden authored Oct 28, 2013




b90d9333






b90d9333




b90d9333






suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6










suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013






864f77c6






suppress warning

·
864f77c6


Eric Bodden authored Oct 28, 2013


·
864f77c6

Eric Bodden authored Oct 28, 2013




864f77c6






864f77c6




864f77c6

26 Oct, 2013
3 commits
26 Oct, 20133 commits







Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e













added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac













removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85














Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e










Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.





3cad6e8e






Better be careful with executors: If they are shutting down, no new tasks may...

·
3cad6e8e





Steven Arzt authored Oct 26, 2013

Better be careful with executors: If they are shutting down, no new tasks may be submitted - otherwise, we will just trigger another pointless exception. Secondly, if we increment the number of active executors and only afterwards actually submit the task, we have to make sure that the submission goes through - otherwise out counter is off by one! I now decrement it again if the executor rejects the new task.

·
3cad6e8e

Steven Arzt authored Oct 26, 2013




3cad6e8e






3cad6e8e




3cad6e8e






added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac










added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013






4f842bac






added logging for execution errors in worker threads

·
4f842bac


Steven Arzt authored Oct 26, 2013


·
4f842bac

Steven Arzt authored Oct 26, 2013




4f842bac






4f842bac




4f842bac






removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85










removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013






02ad0f85






removed an assertion that could cause deadlocks under some rare circumstances

·
02ad0f85


Steven Arzt authored Oct 26, 2013


·
02ad0f85

Steven Arzt authored Oct 26, 2013




02ad0f85






02ad0f85




02ad0f85

25 Oct, 2013
1 commit
25 Oct, 20131 commit







1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e














1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e










1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them





20810d2e






1) added some override annotations

·
20810d2e





Steven Arzt authored Oct 25, 2013

2) improved thread safety by not only copying the incoming set, but also the sets it contains since they may as well be changed by other threads while we try to iterate over them

·
20810d2e

Steven Arzt authored Oct 25, 2013




20810d2e






20810d2e




20810d2e

23 Oct, 2013
1 commit
23 Oct, 20131 commit







added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047














added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047










added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013






ca17b047






added some synchronization statements

·
ca17b047


Steven Arzt authored Oct 23, 2013


·
ca17b047

Steven Arzt authored Oct 23, 2013




ca17b047






ca17b047




ca17b047

18 Oct, 2013
4 commits
18 Oct, 20134 commits







Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302













Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013













Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc













added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b














Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302










Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java





5bea6302






Merge branch 'feature/reduced-summaries-bidi' into develop

·
5bea6302





Eric Bodden authored Oct 18, 2013


Conflicts:
	.classpath
	src/heros/solver/BiDiIFDSSolver.java

·
5bea6302

Eric Bodden authored Oct 18, 2013




5bea6302






5bea6302




5bea6302






Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013










Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.





6a582013






Revert "first implementation of reduced summaries"

·
6a582013





Eric Bodden authored Oct 18, 2013


This reverts commit f161c043.

·
6a582013

Eric Bodden authored Oct 18, 2013




6a582013






6a582013




6a582013






Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc










Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.





4aa7bebc






Revert "comments for SummarizableAbstraction"

·
4aa7bebc





Eric Bodden authored Oct 18, 2013


This reverts commit 0b8c932a.

·
4aa7bebc

Eric Bodden authored Oct 18, 2013




4aa7bebc






4aa7bebc




4aa7bebc






added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b










added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths





d9ac548b






added a PathTrackingIFDSSolver which implements the keeping track of paths;

·
d9ac548b





Eric Bodden authored Oct 18, 2013

modified BiDiIFDSSolver such that it extends this solver; this is necessary because the BiDi-operations must occur before (!) the caching; otherwise the path constructions may miss paths

·
d9ac548b

Eric Bodden authored Oct 18, 2013




d9ac548b






d9ac548b




d9ac548b

14 Oct, 2013
3 commits
14 Oct, 20133 commits







added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a













Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614













made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a














added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a










added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013






a5ce3e8a






added SLF4j to the build script and the eclipse dependency list

·
a5ce3e8a


Steven Arzt authored Oct 14, 2013


·
a5ce3e8a

Steven Arzt authored Oct 14, 2013




a5ce3e8a






a5ce3e8a




a5ce3e8a






Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614










Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS





3671e614






Merge pull request #5 from malaverdiere/merge-develop

·
3671e614





Steven Arzt authored Oct 14, 2013


SLF4J Logging in HEROS

·
3671e614

Steven Arzt authored Oct 14, 2013




3671e614






3671e614




3671e614






made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a










made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013






1211a53a






made a method protected

·
1211a53a


Steven Arzt authored Oct 14, 2013


·
1211a53a

Steven Arzt authored Oct 14, 2013




1211a53a






1211a53a




1211a53a

10 Oct, 2013
4 commits
10 Oct, 20134 commits







Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e













Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2













Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3













1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7














Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e










Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013






51c1c00e






Added DEBUG field as it is needed by JimpleBasedInterproceduralCFG

·
51c1c00e


Marc-André Laverdière authored Oct 10, 2013


·
51c1c00e

Marc-André Laverdière authored Oct 10, 2013




51c1c00e






51c1c00e




51c1c00e






Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2










Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013






69e499f2






Added logging information in IDESolver.computeValues

·
69e499f2


Marc-André Laverdière authored Sep 20, 2013


·
69e499f2

Marc-André Laverdière authored Sep 20, 2013




69e499f2






69e499f2




69e499f2






Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3










Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013






8302b8d3






Ported to SLF4J Logging

·
8302b8d3


Marc-André Laverdière authored Sep 13, 2013


·
8302b8d3

Marc-André Laverdière authored Sep 13, 2013




8302b8d3






8302b8d3




8302b8d3






1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7










1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted





aacc49a7






1) semantic fix: unbalanced returns are associated with a caller-side zero...

·
aacc49a7





Steven Arzt authored Oct 10, 2013

1) semantic fix: unbalanced returns are associated with a caller-side zero fact as context (d1), not with an empty list of contexts. This allows us to distinguish whether we actually have no caller to which to return or whether we have an unconditional taint.

2) code merge from Reviser: Allowing jump functions to be deleted

·
aacc49a7

Steven Arzt authored Oct 10, 2013




aacc49a7






aacc49a7




aacc49a7






